{"version":3,"sources":["helpers/auth.ts","helpers/cart.ts","anotherStore.tsx","components/core/Navigation.tsx","config.ts","components/core/Layout.tsx","components/core/ProductItem.tsx","store/actions/category.actions.ts","store/actions/product.actions.ts","components/core/Search.tsx","components/core/Home.tsx","components/core/CheckBox.tsx","helpers/price.ts","components/core/RadioBox.tsx","components/core/Shop.tsx","store/actions/auth.actions.ts","components/core/Signin.tsx","components/core/Signup.tsx","components/admin/Dashboard.tsx","components/admin/PrivateRoute.tsx","components/admin/AdminDashboard.tsx","components/admin/AdminRoute.tsx","components/admin/AddCategory.tsx","components/admin/AddProduct.tsx","components/core/Product.tsx","components/core/CartItemFc.tsx","components/core/TotalPrice.tsx","components/core/Pay.tsx","components/core/Cart.tsx","components/core/Success.tsx","components/admin/Orders.tsx","Routes.tsx","store/reducers/auth.reducer.ts","store/reducers/category.reducer.ts","store/reducers/product.reducer.ts","store/reducers/index.ts","store/sagas/auth.saga.ts","store/sagas/category.saga.ts","store/sagas/product.saga.ts","store/sagas/index.ts","store/index.ts","index.tsx"],"names":["isAuth","jwt","localStorage","getItem","JSON","parse","itemCount","window","length","TotalContext","React","createContext","AnotherStore","children","useState","count","setCount","Provider","value","useActive","currentPath","path","API","Navigation","pathname","useSelector","state","router","location","isHome","isShop","isSignin","isSignup","isCart","isDashboard","getDashboarUrl","useContext","url","user","role","useEffect","mode","selectable","Item","className","to","offset","Layout","title","subTitle","style","width","margin","process","Title","Typography","Paragraph","ProductItem","product","showViewProduct","showCartBtn","dispatch","useDispatch","addToCart","item","next","cart","push","Array","from","Set","map","_id","find","setItem","stringify","addItem","cover","src","alt","name","actions","buttonArray","type","onClick","showButtons","level","ellipsis","rows","description","span","sold","textAlign","price","moment","createdAt","format","category","GET_CATEGORY","GET_CATEGORY_SUCCESS","getCategory","GET_PRODUCT","GET_PRODUCT_SUCCESS","getProduct","sortBy","order","limit","getProductSuccess","payload","SEARCH_PRODUCT","SEARCH_PRODUCT_SUCCESS","FILTER_PRODUCT","FILTER_PRODUCT_SUCCESS","GET_PRODUCT_BY_ID","GET_PRODUCT_BY_ID_SUCCESS","getProductByIdSuccess","Search","search","onFinish","layout","initialValues","Group","compact","Option","result","placeholder","htmlType","gutter","Home","products","Checkbox","handleFilter","options","label","onChange","checkedValue","prices","id","array","RadioBox","event","target","dataSource","renderItem","Shop","skip","setSkip","myFilters","setMyFilter","filters","loadMore","size","direction","filter","data","SIGNUP","SIGNUP_SUCCESS","SIGNUP_FAIL","RESET_SIGNUP","signupFail","message","SIGNIN","SIGNIN_SUCCESS","SIGNIN_FAIL","signinFail","Signin","auth","signin","loaded","success","status","showError","redirectToDashboard","Password","Signup","Form","useForm","form","signup","resetFields","extra","showSuccess","Dashboard","PrivateRoute","Component","component","rest","render","props","AdminDashboard","email","ShoppingCartOutlined","UserOutlined","OrderedListOutlined","bordered","AdminRoute","AddCategory","setName","token","a","axios","post","headers","Authorization","response","error","addCategory","console","log","AddProduct","file","setFile","formData","FormData","attr","set","then","accept","beforeUpload","icon","UploadOutlined","addProductForm","Product","productId","useParams","CartItemFc","setCart","parseInt","forEach","index","updateItem","splice","deleteItem","danger","TotalPrice","setTotalPrice","getTotalPrice","reduce","currentValue","nextValue","toFixed","parseFloat","Pay","totalPrice","address","getPayUrl","totalAmount","subject","body","userId","href","Cart","setAddress","Success","Orders","orders","setOrders","getOrders","get","showStatus","orderId","put","defaultValue","trade_no","amount","Routes","exact","intialState","authReducer","action","initialState","categoryReducer","quantity","photo","shipping","productReducer","createRootReducer","history","combineReducers","connectRouter","hanleSignup","handleSignin","authSaga","takeEvery","handleGetCategory","categorySaga","handleGetProduct","handleSearchProduct","handleFilterProduct","handleGetProductById","productSaga","params","rootSaga","all","createHashHistory","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","run","ReactDOM","document","getElementById"],"mappings":"iSAEO,SAASA,IACd,IAAMC,EAAMC,aAAaC,QAAQ,OACjC,QAAIF,GAAYG,KAAKC,MAAMJ,G,YCgFhBK,EAAY,WACvB,MAAsB,qBAAXC,QACLL,aAAaC,QAAQ,QAChBC,KAAKC,MAAMH,aAAaC,QAAQ,SAAUK,OAG9C,GCvFIC,EAAeC,IAAMC,cAEhC,CAAC,EAAG,kBAAM,QAeGC,EATiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACtBC,mBAASR,KADa,mBACzCS,EADyC,KAClCC,EADkC,KAEhD,OACE,cAACP,EAAaQ,SAAd,CAAuBC,MAAO,CAACH,EAAOC,GAAtC,SACGH,KCJP,SAASM,EAAUC,EAAqBC,GACtC,OAAOD,IAAgBC,EAAO,yBAA2B,GAG3D,ICfWC,ED8EIC,EA/DI,WACjB,IACMC,EADSC,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,UACzCC,SAASJ,SAC3BK,EAASV,EAAUK,EAAU,KAC7BM,EAASX,EAAUK,EAAU,SAC7BO,EAAWZ,EAAUK,EAAU,WAC/BQ,EAAWb,EAAUK,EAAU,WAC/BS,EAASd,EAAUK,EAAU,SAC7BU,EAAcf,EAAUK,EAAUW,KARjB,EAUGC,qBAAW3B,GAVd,mBAUhBM,EAVgB,KAUTC,EAVS,KAgBvB,SAASmB,IACP,IAAIE,EAAM,kBACNrC,MAKW,IAFTA,IADFsC,KAAQC,OAIRF,EAAM,qBAGV,OAAOA,EAGT,OAlBAG,qBAAU,WACRxB,EAASV,QAkBT,eAAC,IAAD,CAAMmC,KAAK,aAAaC,YAAY,EAApC,UACE,cAAC,IAAKC,KAAN,CAAWC,UAAWf,EAAtB,SACE,cAAC,IAAD,CAAMgB,GAAG,IAAT,4BAEF,cAAC,IAAKF,KAAN,CAAWC,UAAWd,EAAtB,SACE,cAAC,IAAD,CAAMe,GAAG,QAAT,4BAEF,cAAC,IAAKF,KAAN,CAAWC,UAAWX,EAAtB,SACE,eAAC,IAAD,CAAMY,GAAG,QAAT,+BAEE,cAAC,IAAD,CAAO9B,MAAOA,EAAO+B,OAAQ,CAAC,GAAI,YAGpC9C,KACA,qCACE,cAAC,IAAK2C,KAAN,CAAWC,UAAWb,EAAtB,SACE,cAAC,IAAD,CAAMc,GAAG,UAAT,4BAEF,cAAC,IAAKF,KAAN,CAAWC,UAAWZ,EAAtB,SACE,cAAC,IAAD,CAAMa,GAAG,UAAT,+BAIL7C,KACC,cAAC,IAAK2C,KAAN,CAAWC,UAAWV,EAAtB,SACE,cAAC,IAAD,CAAMW,GAAIV,IAAV,6BEnDKY,EAVW,SAAC,GAAmC,IAAjClC,EAAgC,EAAhCA,SAAUmC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC5C,OACE,gCACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAYL,UAAU,YAAYI,MAAOA,EAAOC,SAAUA,IAC1D,qBAAKC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,UAApC,SAAiDvC,Q,4CDVrDS,EAAM+B,qC,YEKAC,EAAqBC,IAArBD,MAAOE,EAAcD,IAAdC,UAuEAC,EA/DgB,SAAC,GAIzB,IAHLC,EAGI,EAHJA,QAGI,IAFJC,uBAEI,aADJC,mBACI,SACEC,EAAWC,cAEXC,EAAY,YLfG,SAACC,EAAeC,GACrC,IAAIC,EAAmB,GACD,qBAAX3D,SACLL,aAAaC,QAAQ,UACvB+D,EAAO9D,KAAKC,MAAMH,aAAaC,QAAQ,UAEzC+D,EAAKC,KAAL,2BACKH,GADL,IAEEjD,MAAO,MAGXmD,EAAOE,MAAMC,KAAK,IAAIC,IAAIJ,EAAKK,KAAI,SAAAP,GAAI,OAAIA,EAAKQ,SAAOD,KAAI,SAAAP,GACzD,OAAOE,EAAKO,MAAK,SAAAf,GAAO,OAAIA,EAAQc,MAAQR,QAG9C9D,aAAawE,QAAQ,OAAQtE,KAAKuE,UAAUT,IAE5CD,IKDEW,CAAQlB,GAAS,WACfG,EAASM,YAAK,cAsBlB,OACE,eAAC,IAAD,CACEU,MAEE,cAAC,IAAD,CACEC,IAAG,UAAKxD,EAAL,0BAA0BoC,EAAQc,KACrCO,IAAKrB,EAAQsB,OAGjBC,QA3BgB,WAClB,IAAIC,EAAc,GAclB,OAbIvB,GACFuB,EAAYf,KACV,cAAC,IAAD,CAAQgB,KAAK,OAAb,SACE,cAAC,IAAD,CAAMtC,GAAE,mBAAca,EAAQc,KAA9B,yCAGFZ,GACFsB,EAAYf,KACV,cAAC,IAAD,CAAQgB,KAAK,OAAOC,QAASrB,EAA7B,6CAKGmB,EAYIG,GARX,UAUE,cAAC/B,EAAD,CAAOgC,MAAO,EAAd,SAAkB5B,EAAQsB,OAE1B,cAACxB,EAAD,CAAW+B,SAAU,CAAEC,KAAM,GAA7B,SAAmC9B,EAAQ+B,cAC3C,eAAC,IAAD,WACE,eAAC,IAAD,CAAKC,KAAK,KAAV,2BAAoBhC,EAAQiC,QAC5B,eAAC,IAAD,CAAKD,KAAK,KAAKxC,MAAO,CAAE0C,UAAW,SAAnC,2BACOlC,EAAQmC,YAGjB,eAAC,IAAD,WACE,eAAC,IAAD,CAAKH,KAAK,KAAV,uCACSI,IAAOpC,EAAQqC,WAAWC,OAAO,iBAE1C,eAAC,IAAD,CAAKN,KAAK,KAAKxC,MAAO,CAAE0C,UAAW,SAAnC,uCACSlC,EAAQuC,SAASjB,e,oCCzErBkB,EAAe,eACfC,EAAuB,uBAWvBC,EAAc,iBAA0B,CACnDjB,KAAMe,ICbKG,EAAc,cACdC,EAAsB,sBAiBtBC,EAAa,SACxBC,GADwB,IAExBC,EAFwB,uDAER,OAChBC,EAHwB,uDAGR,GAHQ,MAIF,CACtBvB,KAAMkB,EACNG,SACAC,QACAC,UAGWC,EAAoB,SAC/BC,EACAJ,GAF+B,MAGF,CAC7BrB,KAAMmB,EACNM,UACAJ,WAOWK,EAAiB,iBACjBC,EAAyB,yBAkCzBC,EAAiB,iBACjBC,EAAyB,yBA8CzBC,EAAoB,oBACpBC,EAA4B,4BAqB5BC,GAAwB,SACnCP,GADmC,MAEF,CACjCzB,KAAM+B,EACNN,YClFaQ,GA3DA,WACb,IAAMvD,EAAWC,cAETmC,EAAaxE,aACnB,SAAAC,GAAK,OAAIA,EAAMuE,YADTA,SAIAoB,EAAW5F,aACjB,SAAAC,GAAK,OAAIA,EAAMgC,WADT2D,OAIR7E,qBAAU,WACRqB,EAASuC,OACR,IAQH,OACE,qCACE,cAAC,IAAD,CACEkB,SATW,SAACpG,GDkCS,IAAC0F,ECjC1B/C,GDiC0B+C,EChCV,CAAEX,SAAU/E,EAAM+E,SAAUoB,OAAQnG,EAAMmG,QDmClC,CAC1BlC,KAAM0B,EACND,cC7BMW,OAAO,SACPC,cAAe,CAAEvB,SAAU,OAH7B,SAKE,eAAC,IAAMwB,MAAP,CAAaC,SAAO,EAApB,UACE,cAAC,IAAK/E,KAAN,CAAWqC,KAAK,WAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAO2C,OAAR,CAAezG,MAAM,MAArB,sCACC+E,EAAS2B,OAAOrD,KAAI,SAAAP,GAAI,OACvB,cAAC,IAAO2D,OAAR,CAA8BzG,MAAO8C,EAAKQ,IAA1C,SACGR,EAAKgB,MADYhB,EAAKQ,aAM/B,cAAC,IAAK7B,KAAN,CAAWqC,KAAK,SAAhB,SACE,cAAC,IAAD,CAAO6C,YAAY,uDAErB,cAAC,IAAKlF,KAAN,UACE,cAAC,IAAD,CAAQmF,SAAS,SAAjB,iCAIN,cAAC,IAAD,IACA,cAAC,IAAD,CAAKC,OAAQ,CAAC,GAAI,IAAlB,SACGV,EAAO9C,KAAI,SAAAP,GAAI,OACd,cAAC,IAAD,CAAK0B,KAAK,IAAV,SACE,cAAC,EAAD,CAAahC,QAASM,eCnD1BV,GAAUC,IAAVD,MAqCO0E,GAnCF,WACX,IAAMnE,EAAWC,cADA,EAGWrC,aAC1B,SAAAC,GAAK,OAAIA,EAAMgC,WADTqC,EAHS,EAGTA,UAAWJ,EAHF,EAGEA,KASnB,OALAnD,qBAAU,WACRqB,EAAS0C,EAAW,cACpB1C,EAAS0C,EAAW,WACnB,IAGD,eAAC,EAAD,CAAQvD,MAAM,2BAAOC,SAAS,mFAA9B,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAOqC,MAAO,EAAd,sCACA,cAAC,IAAD,CAAKyC,OAAQ,CAAC,GAAI,IAAlB,SACGhC,EAAUkC,SAAS1D,KAAI,SAAAP,GAAI,OAC1B,cAAC,IAAD,CAAoB0B,KAAK,IAAzB,SACE,cAAC,EAAD,CAAahC,QAASM,KADdA,EAAKQ,UAKnB,cAAC,GAAD,CAAOc,MAAO,EAAd,sCACA,cAAC,IAAD,CAAKyC,OAAQ,CAAC,GAAI,IAAlB,SACGpC,EAAKsC,SAAS1D,KAAI,SAAAP,GAAI,OACrB,cAAC,IAAD,CAAoB0B,KAAK,IAAzB,SACE,cAAC,EAAD,CAAahC,QAASM,KADdA,EAAKQ,c,8BC9BjBlB,GAAUC,IAAVD,MAoCO4E,GA9Ba,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACvBtE,EAAWC,cAEXmC,EAAWxE,aACf,SAAAC,GAAK,OAAIA,EAAMuE,YAGjBzD,qBAAU,WACRqB,EAASuC,OACR,IAMH,OACE,qCACE,cAAC,GAAD,CAAOd,MAAO,EAAd,kDACA,cAAC,KAAamC,MAAd,CACE7E,UAAU,iBACVwF,QAASnC,EAASA,SAAS2B,OAAOrD,KAAI,SAAAP,GAAI,MAAK,CAC7CqE,MAAOrE,EAAKgB,KACZ9D,MAAO8C,EAAKQ,QAEd8D,SAbW,SAACC,GAChBJ,EAAaI,U,oBCSFC,GAjCS,CACtB,CACEC,GAAI,EACJzD,KAAM,iCACN0D,MAAO,IAET,CACED,GAAI,EACJzD,KAAM,SACN0D,MAAO,CAAC,EAAG,KAEb,CACED,GAAI,EACJzD,KAAM,WACN0D,MAAO,CAAC,GAAI,MAEd,CACED,GAAI,EACJzD,KAAM,YACN0D,MAAO,CAAC,IAAK,MAEf,CACED,GAAI,EACJzD,KAAM,YACN0D,MAAO,CAAC,IAAK,MAEf,CACED,GAAI,EACJzD,KAAM,YACN0D,MAAO,CAAC,IAAK,OCzBTpF,GAAUC,IAAVD,MA8BOqF,GAxBa,SAAC,GAAsB,IAApBR,EAAmB,EAAnBA,aACvBG,EAAW,SAACM,GAChBT,EAAaS,EAAMC,OAAO3H,QAG5B,OACE,qCACE,cAAC,GAAD,CAAOoE,MAAO,EAAd,kDACA,cAAC,KAAMmC,MAAP,UACE,cAAC,KAAD,CACEqB,WAAYN,GACZO,WAAY,SAAA/E,GAAI,OACd,cAAC,KAAKrB,KAAN,UACE,cAAC,KAAD,CAAO2F,SAAUA,EAAUpH,MAAO8C,EAAK0E,MAAvC,SACG1E,EAAKgB,kBC4DPgE,GA3EF,WACX,IAAMnF,EAAWC,cADA,EAGOhD,mBAAiB,GAHxB,mBAGVmI,EAHU,KAGJC,EAHI,KAKXxF,EAAUjC,aAAoC,SAAAC,GAAK,OAAIA,EAAMgC,WALlD,EAOgB5C,mBAG9B,CAAEmF,SAAU,GAAIJ,MAAO,KAVT,mBAOVsD,EAPU,KAOCC,EAPD,KAYjB5G,qBAAU,WACR0G,EAAQ,KACP,CAACC,IAEJ3G,qBAAU,WACRqB,ENgFuB,CACzBsB,KAAM4B,EACNH,QMlFyB,CAAEyC,QAASF,EAAWF,YAC5C,CAACE,EAAWF,IAEf,IAmCMK,EAAW,WACfJ,EAAQD,EAAO,IAOjB,OACE,cAAC,EAAD,CAAQjG,MAAM,2BAAOC,SAAS,yDAA9B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKyC,KAAK,IAAV,SA7CJ,eAAC,KAAD,CAAO6D,KAAK,SAASC,UAAU,WAA/B,UACE,cAAC,GAAD,CACErB,aAAc,SAACkB,GACbD,EAAY,2BAAKD,GAAN,IAAiBlD,SAAUoD,QAG1C,cAAC,GAAD,CACElB,aAAc,SAACkB,GACbD,EAAY,2BAAKD,GAAN,IAAiBtD,MAAOwD,aAsCrC,eAAC,IAAD,CAAK3D,KAAK,KAAV,UA/BJ,cAAC,IAAD,CAAKqC,OAAQ,CAAC,GAAI,IAAlB,SACGrE,EAAQ+F,OAAO7B,OAAO8B,KAAKnF,KAAI,SAAAP,GAAI,OAClC,cAAC,IAAD,CAAoB0B,KAAK,IAAzB,SACE,cAAC,EAAD,CAAahC,QAASM,KADdA,EAAKQ,UA6Bf,IApBF,cAAC,IAAD,UACGd,EAAQ+F,OAAO7B,OAAO2B,MAAQ,GAC7B,cAAC,IAAD,CAAQnE,QAASkE,EAAjB,wCAkBF,IAPG,cAAC,IAAD,UAAqC,IAA/B5F,EAAQ+F,OAAO7B,OAAO2B,MAAc,cAAC,KAAD,e,UCpExCI,GAAS,SACTC,GAAiB,iBACjBC,GAAc,cACdC,GAAe,eAmCfC,GAAa,SAACC,GAAD,MAAwC,CAChE7E,KAAM0E,GACNG,YAWWC,GAAS,SACTC,GAAiB,iBACjBC,GAAc,cA8BdC,GAAa,SAACJ,GAAD,MAAwC,CAChE7E,KAAMgF,GACNH,YCZaK,GAjEA,WAEb,IAAMxG,EAAWC,cAEXwD,EAAW,SAACpG,GAEhB2C,ED4D6D,CAC/DsB,KAAM8E,GACNrD,QC9DkB1F,KAGZoJ,EAAO7I,aAAiC,SAAAC,GAAK,OAAIA,EAAM4I,QA+C7D,OACE,eAAC,EAAD,CAAQtH,MAAM,eAAKC,SAAS,uGAA5B,UA9CgB,WAChB,GAAIqH,EAAKC,OAAOC,SAAWF,EAAKC,OAAOE,QACrC,OACE,cAAC,KAAD,CACEC,OAAO,UACP1H,MAAM,2BACNC,SAAUqH,EAAKC,OAAOP,UAyCzBW,GAnCuB,WAC1B,IAAML,EAAOtK,IACb,GAAIsK,EAKF,OAAa,IAFTA,EADFhI,KAAQC,KAKD,cAAC,IAAD,CAAUM,GAAG,oBAGb,cAAC,IAAD,CAAUA,GAAG,qBAwBrB+H,GAlBH,eAAC,IAAD,CAAMtD,SAAUA,EAAhB,UACE,cAAC,IAAK3E,KAAN,CAAWqC,KAAK,QAAQqD,MAAM,eAA9B,SACE,cAAC,IAAD,MAEF,cAAC,IAAK1F,KAAN,CAAWqC,KAAK,WAAWqD,MAAM,eAAjC,SACE,cAAC,IAAMwC,SAAP,MAEF,cAAC,IAAKlI,KAAN,UACE,cAAC,IAAD,CAAQwC,KAAK,UAAU2C,SAAS,SAAhC,mCCqCOgD,GApFA,WAEb,IAAMjH,EAAWC,cAEXwG,EAAO7I,aAAiC,SAAAC,GAAK,OAAIA,EAAM4I,QAJ1C,EAMJS,IAAKC,UAAbC,EANY,oBASb3D,EAAW,SAACpG,GAEhB2C,EFQ6D,CAC/DsB,KAAMwE,GACN/C,QEVkB1F,KAIlBsB,qBAAU,WACJ8H,EAAKY,OAAOV,QAAUF,EAAKY,OAAOT,SACpCQ,EAAKE,gBAEN,CAACb,IA+BJ9H,qBAAU,WACR,OAAO,WACLqB,EFnB+C,CACnDsB,KAAM2E,QEoBH,IAqBH,OACE,eAAC,EAAD,CAAQ9G,MAAM,eAAKC,SAAS,kEAA5B,UAtDkB,WAClB,GAAIqH,EAAKY,OAAOV,QAAUF,EAAKY,OAAOT,QACpC,OACE,cAAC,KAAD,CACEC,OAAO,UACP1H,MAAM,2BACNoI,MAAO,CACL,cAAC,IAAD,CAAQjG,KAAK,UAAb,SACE,cAAC,IAAD,CAAMtC,GAAG,UAAT,+BA+CPwI,GAvCa,WAChB,GAAIf,EAAKY,OAAOV,SAAWF,EAAKY,OAAOT,QACrC,OACE,cAAC,KAAD,CACEC,OAAO,UACP1H,MAAM,2BACNC,SAAUqH,EAAKY,OAAOlB,UAkCzBW,GArBH,eAAC,IAAD,CAAMM,KAAMA,EAAM3D,SAAUA,EAA5B,UACE,cAAC,IAAK3E,KAAN,CAAWqC,KAAK,OAAOqD,MAAM,eAA7B,SACE,cAAC,IAAD,MAEF,cAAC,IAAK1F,KAAN,CAAWqC,KAAK,WAAWqD,MAAM,eAAjC,SACE,cAAC,IAAMwC,SAAP,MAEF,cAAC,IAAKlI,KAAN,CAAWqC,KAAK,QAAQqD,MAAM,eAA9B,SACE,cAAC,IAAD,MAEF,cAAC,IAAK1F,KAAN,CAAWqC,KAAK,QAAhB,SACE,cAAC,IAAD,CAAQG,KAAK,UAAU2C,SAAS,SAAhC,mCCrEOwD,GATG,WAEhB,OACE,cAAC,EAAD,CAAQtI,MAAM,yBAAeC,SAAS,GAAtC,wB,UCoBWsI,GAlB6B,SAAC,GAGtC,IAFMC,EAEP,EAFJC,UACGC,EACC,8BACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAEN,OADa5L,IAEJ,cAACwL,EAAD,eAAeI,IAEjB,cAAC,IAAD,CAAU/I,GAAG,iB,wCCNpBS,GAAUC,IAAVD,MA6COuI,GA3CQ,WAAO,IAAD,EAGvB7L,IADFsC,KAAQ0C,EAFiB,EAEjBA,KAAM8G,EAFW,EAEXA,MA+BhB,OACE,cAAC,EAAD,CAAQ9I,MAAM,+BAAgBC,SAAS,GAAvC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKyC,KAAK,IAAV,SA9BJ,qCACE,cAAC,GAAD,CAAOJ,MAAO,EAAd,4CACA,eAAC,IAAD,WACE,eAAC,IAAK3C,KAAN,WACE,cAACoJ,GAAA,EAAD,IACA,cAAC,IAAD,CAAMlJ,GAAG,mBAAT,yCAEF,eAAC,IAAKF,KAAN,WACE,cAACqJ,GAAA,EAAD,IACA,cAAC,IAAD,CAAMnJ,GAAG,kBAAT,yCAEF,eAAC,IAAKF,KAAN,WACE,cAACsJ,GAAA,EAAD,IACA,cAAC,IAAD,CAAMpJ,GAAG,gBAAT,iDAkBF,cAAC,IAAD,CAAK6C,KAAK,KAAV,SAXJ,eAAC,KAAD,CAAc1C,MAAM,iCAAQkJ,UAAQ,EAApC,UACE,cAAC,KAAavJ,KAAd,CAAmB0F,MAAM,eAAzB,SAA+BrD,IAC/B,cAAC,KAAarC,KAAd,CAAmB0F,MAAM,eAAzB,SAA+ByD,IAC/B,cAAC,KAAanJ,KAAd,CAAmB0F,MAAM,eAAzB,2CCdS8D,GAtB2B,SAAC,GAGpC,IAFMX,EAEP,EAFJC,UACGC,EACC,8BAEJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GACN,IAAMtB,EAAOtK,IACb,GAAIsK,GAIW,IADTA,EADFhI,KAAQC,KAEM,OAAO,cAACiJ,EAAD,eAAeI,IAExC,OAAO,cAAC,IAAD,CAAU/I,GAAG,iB,4DCoCbuJ,GApDK,WAAO,IAAD,EACAtL,mBAAiB,IADjB,mBACjBkE,EADiB,KACXqH,EADW,OAGArM,IAAhBsC,EAHgB,EAGhBA,KAAMgK,EAHU,EAGVA,MAEd9J,qBAAU,WAAM,8CACd,6BAAA+J,EAAA,+EAEyBC,KAAMC,KAAN,UAChBnL,EADgB,4BACOgB,EAAKkC,KAC/B,CACEQ,KAAMA,GAER,CACE0H,QAAS,CACPC,cAAc,UAAD,OAAYL,MATnC,OAEQM,EAFR,OAaI5C,KAAQS,QAAR,WAAoBmC,EAASlD,KAAK1E,KAAlC,2CAbJ,gDAeIgF,KAAQ6C,MAAM,KAAMD,SAASlD,KAAKmD,OAftC,0DADc,sBAmBV7H,GAnBW,WAAD,wBAoBZ8H,KAED,CAAC9H,IAMJ,OACE,eAAC,EAAD,CAAQhC,MAAM,2BAAOC,SAAS,GAA9B,UACE,eAAC,IAAD,CAAMqE,SANO,SAACpG,GAChB6L,QAAQC,IAAI9L,GACZmL,EAAQnL,EAAM8D,OAIZ,UACE,cAAC,IAAKrC,KAAN,CAAWqC,KAAK,OAAOqD,MAAM,2BAA7B,SACE,cAAC,IAAD,MAEF,cAAC,IAAK1F,KAAN,UACE,cAAC,IAAD,CAAQwC,KAAK,UAAU2C,SAAS,SAAhC,2CAKJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAMjF,GAAG,mBAAT,0C,oBC0DOoK,GAnGI,WACjB,IAAMpJ,EAAWC,cADM,EAEChD,qBAFD,mBAEhBoM,EAFgB,KAEVC,EAFU,KAIjBlH,EAAWxE,aACf,SAAAC,GAAK,OAAIA,EAAMuE,YAGjBzD,qBAAU,WACRqB,EAASuC,OACR,IAVoB,MAYCpG,IAAhBsC,EAZe,EAYfA,KAAMgK,EAZS,EAYTA,MAERhF,EAAW,SAAC5D,GAChB,IAAM0J,EAAW,IAAIC,SACrB,IAAK,IAAIC,KAAQ5J,EACf0J,EAASG,IAAID,EAAM5J,EAAQ4J,IAET,qBAATJ,GACTE,EAASG,IAAI,QAASL,GAGxBV,KACGC,KADH,UACWnL,EADX,2BACiCgB,EAAKkC,KAAO4I,EAAU,CACnDV,QAAS,CACPC,cAAc,UAAD,OAAYL,MAG5BkB,MACC,WACExD,KAAQS,QAAQ,2CAElB,WACET,KAAQ6C,MAAM,4CA0DtB,OACE,cAAC,EAAD,CAAQ7J,MAAM,2BAAOC,SAAS,GAA9B,SAtDqB,WACrB,IAAM2I,EAAQ,CACZ6B,OAAQ,UACRC,aAAc,SAAUR,GAGtB,OAFAH,QAAQC,IAAI,YAAaE,GACzBC,EAAQD,IACD,IAGX,OACE,eAAC,IAAD,CAAM5F,SAAUA,EAAUE,cAAe,CAAEvB,SAAU,IAArD,UACE,cAAC,IAAKtD,KAAN,UACE,cAAC,KAAD,2BAAYiJ,GAAZ,aACE,cAAC,IAAD,CAAQ+B,KAAM,cAACC,GAAA,EAAD,IAAd,uDAGJ,cAAC,IAAKjL,KAAN,CAAWqC,KAAK,OAAOqD,MAAM,2BAA7B,SACE,cAAC,IAAD,MAEF,cAAC,IAAK1F,KAAN,CAAWqC,KAAK,cAAcqD,MAAM,2BAApC,SACE,cAAC,IAAD,MAEF,cAAC,IAAK1F,KAAN,CAAWqC,KAAK,QAAQqD,MAAM,2BAA9B,SACE,cAAC,IAAD,MAEF,cAAC,IAAK1F,KAAN,CAAWqC,KAAK,WAAWqD,MAAM,2BAAjC,SACE,eAAC,IAAD,WACE,cAAC,IAAOV,OAAR,CAAezG,MAAM,GAArB,4CACC+E,EAASA,SAAS2B,OAAOrD,KAAI,SAAAP,GAAI,OAChC,cAAC,IAAO2D,OAAR,CAA8BzG,MAAO8C,EAAKQ,IAA1C,SACGR,EAAKgB,MADYhB,EAAKQ,aAM/B,cAAC,IAAK7B,KAAN,CAAWqC,KAAK,WAAWqD,MAAM,2BAAjC,SACE,cAAC,IAAD,MAEF,cAAC,IAAK1F,KAAN,CAAWqC,KAAK,WAAWqD,MAAM,uCAAjC,SACE,eAAC,IAAD,WACE,cAAC,IAAOV,OAAR,CAAezG,MAAM,IAArB,oBACA,cAAC,IAAOyG,OAAR,CAAezG,MAAM,IAArB,yBAGJ,cAAC,IAAKyB,KAAN,UACE,cAAC,IAAD,CAAQwC,KAAK,UAAU2C,SAAS,SAAhC,2CAUH+F,MC7EQC,GArBC,WACd,IAAMjK,EAAWC,cACTJ,EAAYjC,aAClB,SAAAC,GAAK,OAAIA,EAAMgC,WADTA,QAGAqK,EAAcC,cAAdD,UAIR,OAHAvL,qBAAU,WACRqB,EhB6HyB,CAC3BsB,KAAM8B,EACNL,QgB/H0B,CAAEmH,iBACzB,IAED,cAAC,EAAD,CAAQ/K,MAAM,2BAAOC,SAAS,2BAA9B,SACE,eAAC,IAAD,CAAK8E,OAAQ,GAAb,UACE,cAAC,IAAD,CAAKrC,KAAK,KAAV,SACE,cAAC,EAAD,CAAa/B,iBAAiB,EAAOD,QAASA,EAAQkE,WAExD,cAAC,IAAD,CAAKlC,KAAK,IAAV,yBCgBOuI,GA/Be,SAAC,GAA0B,IAAxBvK,EAAuB,EAAvBA,QAASwK,EAAc,EAAdA,QAAc,EAC5BpN,mBAAiB4C,EAAQ3C,OADG,mBAC/CA,EAD+C,KACxCC,EADwC,KAOtD,OACE,qBAAI4B,UAAU,gBAAd,UACE,oBAAIA,UAAU,iBAAd,SACE,cAAC,IAAD,CAAOO,MAAO,IAAK2B,IAAG,UAAKxD,EAAL,0BAA0BoC,EAAQc,SAE1D,oBAAI5B,UAAU,iBAAd,SAAgCc,EAAQsB,OACxC,oBAAIpC,UAAU,iBAAd,SAAgCc,EAAQmC,QACxC,oBAAIjD,UAAU,iBAAd,SAAgCc,EAAQuC,SAASjB,OACjD,oBAAIpC,UAAU,iBAAd,SACE,cAAC,IAAD,CAAOuC,KAAK,SAASjE,MAAOH,EAAOuH,SAdpB,SAACM,GACpB,IAAI7H,EAAQoN,SAASvF,EAAMC,OAAO3H,OAClCgN,ExBgCsB,SAACH,EAAmBhN,GAC5C,IAAImD,EAAmB,GAYvB,MAXsB,qBAAX3D,SACLL,aAAaC,QAAQ,UACvB+D,EAAO9D,KAAKC,MAAMH,aAAaC,QAAQ,UAEzC+D,EAAKkK,SAAQ,SAACpK,EAAMqK,GACdrK,EAAKQ,MAAQuJ,IACf7J,EAAKmK,GAAOtN,MAAQA,MAGxBb,aAAawE,QAAQ,OAAQtE,KAAKuE,UAAUT,KAEvCA,EwB7CGoK,CAAW5K,EAAQc,IAAKzD,IAChCC,EAASD,QAaP,oBAAI6B,UAAU,iBAAd,SACE,cAAC,IAAD,CACEwC,QAAS,kBAAM8I,ExBmCC,SAACH,GACzB,IAAI7J,EAAmB,GAYvB,MAXsB,qBAAX3D,SACLL,aAAaC,QAAQ,UACvB+D,EAAO9D,KAAKC,MAAMH,aAAaC,QAAQ,UAEzC+D,EAAKkK,SAAQ,SAACpK,EAAMqK,GACdrK,EAAKQ,MAAQuJ,GACf7J,EAAKqK,OAAOF,EAAO,MAGvBnO,aAAawE,QAAQ,OAAQtE,KAAKuE,UAAUT,KAEvCA,EwBhDwBsK,CAAW9K,EAAQc,OAC1CiK,QAAM,EACNtJ,KAAK,UAHP,gCCzBA7B,GAAUC,IAAVD,MAwBOoL,GAjBe,SAAC,GAA6B,IAA3BxK,EAA0B,EAA1BA,KAAMyK,EAAoB,EAApBA,cAC/BC,EAAgB,WAEpB,OADA7B,QAAQC,IAAI9I,GACLA,EACJ2K,QAAO,SAACC,EAAcC,GACrB,OAAQD,EAAgBC,EAAUlJ,MAAQkJ,EAAUhO,QACnD,GACFiO,QAAQ,IAOb,OAJAxM,qBAAU,WACRmM,EAAcM,WAAWL,QACxB,CAAC1K,IAEG,eAAC,GAAD,CAAOoB,MAAO,EAAd,uCAAwBsJ,QCsBlBM,GAhCQ,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,QAASlL,EAAW,EAAXA,KACvCmL,EAAY,WAChB7C,KACGC,KADH,UACWnL,EADX,WACyB,CACrBgO,YAAaH,EACbI,QAAS,uCACTC,KAAM,uCACNvH,SAAU/D,EAAKK,KAAI,SAAAb,GAAO,MAAK,CAC7B3C,MAAO2C,EAAQ3C,MACf2C,QAASA,EAAQc,QAEnB4K,QAASA,EACTK,OAASzP,IAAiBsC,KAAKkC,MAEhCgJ,MAAK,SAAAZ,GACJrM,OAAOqB,SAAS8N,KAAO9C,EAASlD,KAAK9B,WAc3C,OAAO,mCATE5H,IACL,cAAC,IAAD,CAAQoF,QAASiK,EAAjB,sCAEA,cAAC,IAAD,UACE,cAAC,IAAD,CAAMxM,GAAG,UAAT,+BC2BO8M,GA1DF,WAAO,IAAD,EACO7O,mBAAqB,IAD5B,mBACVoD,EADU,KACJgK,EADI,OAEapN,mBAAiB,IAF9B,mBAEVsO,EAFU,KAEDQ,EAFC,OAGmB9O,oBAAiB,WACnD,OAAO,KAJQ,mBAGVqO,EAHU,KAGER,EAHF,KAOjBnM,qBAAU,WACR0L,E3BmBoB,qBAAX3N,QACLL,aAAaC,QAAQ,QAChBC,KAAKC,MAAMH,aAAaC,QAAQ,SAGpC,M2BvBJ,IAsBH,OACE,cAAC,EAAD,CAAQ6C,MAAM,qBAAMC,SAAS,2DAA7B,SACE,eAAC,IAAD,CAAK8E,OAAQ,GAAb,UACE,cAAC,IAAD,CAAKrC,KAAK,KAAV,SAtBJ,wBAAOxC,MAAO,CAAEC,MAAO,QAAvB,UACE,uBAAOP,UAAU,kBAAjB,SACE,+BACE,oBAAIA,UAAU,iBAAd,sCACA,oBAAIA,UAAU,iBAAd,sCACA,oBAAIA,UAAU,iBAAd,sCACA,oBAAIA,UAAU,iBAAd,sCACA,oBAAIA,UAAU,iBAAd,sCACA,oBAAIA,UAAU,iBAAd,+BAGJ,uBAAOA,UAAU,kBAAjB,SACGsB,EAAKK,KAAI,SAAAP,GAAI,OACZ,cAAC,GAAD,CAA2BkK,QAASA,EAASxK,QAASM,GAArCA,EAAKQ,eAUxB,eAAC,IAAD,CAAKkB,KAAK,IAAV,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACExE,MAAOkO,EACP9G,SAAU,SAACM,GAAD,OACRgH,EAAWhH,EAAMC,OAAO3H,QAE1B2G,YAAY,iDAGhB,cAAC,IAAD,IACA,cAAC,IAAD,UACE,cAAC,GAAD,CAAY3D,KAAMA,EAAMyK,cAAeA,MAEzC,cAAC,IAAD,UACE,cAAC,GAAD,CAAKQ,WAAYA,EAAYjL,KAAMA,EAAMkL,QAASA,eC3C/CS,GAVC,WACd,OACE,cAAC,EAAD,CAAQ7M,MAAM,2BAAOC,SAAS,GAA9B,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,2CCCAS,GAAUC,IAAVD,MAiIOwM,GA/HA,WAAO,IAAD,EACK9P,IAAhBsM,EADW,EACXA,MAAOhK,EADI,EACJA,KADI,EAESxB,mBAAS,IAFlB,mBAEZiP,EAFY,KAEJC,EAFI,cAIJC,IAJI,6EAInB,6BAAA1D,EAAA,sEACuBC,KAAM0D,IAAN,UAAa5O,EAAb,uBAA+BgB,EAAKkC,KAAO,CAC9DkI,QAAS,CACPC,cAAc,UAAD,OAAYL,MAH/B,OACMM,EADN,OAMEoD,EAAUpD,EAASlD,MANrB,4CAJmB,sBAanBlH,qBAAU,WACRyN,MACC,IAEH,IAQME,EAAa,SAACzF,GAClB,OAAQA,GACN,IAAK,SACH,MAAO,qBACT,IAAK,OACH,MAAO,qBACT,IAAK,UACH,MAAO,qBACT,IAAK,YACH,MAAO,qBACT,IAAK,YACH,MAAO,uBAuBb,OACE,cAAC,EAAD,CAAQ1H,MAAM,eAAKC,SA1Cf8M,EAAOvP,OAAS,EACZ,oDAAN,OAAmBuP,EAAOvP,QAEpB,iCAuCR,SACGuP,EAAOxL,KAAI,SAACkC,GAAD,OACV,gCACE,eAAC,GAAD,CAAOnB,MAAO,EAAd,8BAAyBmB,EAAMjC,OAC/B,wBAAOtB,MAAO,CAAEC,MAAO,QAAvB,UACE,uBAAOP,UAAU,kBAAjB,SACE,+BACE,oBAAIA,UAAU,iBAAd,sCACA,oBAAIA,UAAU,iBAAd,gCACA,oBAAIA,UAAU,iBAAd,0BACA,oBAAIA,UAAU,iBAAd,sCACA,oBAAIA,UAAU,iBAAd,sCACA,oBAAIA,UAAU,iBAAd,2CAGJ,uBAAOA,UAAU,kBAAjB,SACE,qBAAIA,UAAU,gBAAd,UACE,qBAAIA,UAAU,iBAAd,UACGuN,EAAW1J,EAAMiE,QAAS,IAC3B,eAAC,IAAD,CACEpC,UAxCI8H,EAwCmB3J,EAAMjC,IAxCL,SAACkG,GACzC8B,KACG6D,IADH,UAEO/O,EAFP,yBAE2BgB,EAAKkC,KAC5B,CACE4L,UACA1F,UAEF,CACEgC,QAAS,CACPC,cAAc,UAAD,OAAYL,MAI9BkB,MAAK,WACJyC,SA0BYK,aAAc7J,EAAMiE,OAFtB,UAIE,cAAC,IAAO/C,OAAR,CAAezG,MAAM,SAArB,gCACA,cAAC,IAAOyG,OAAR,CAAezG,MAAM,OAArB,gCACA,cAAC,IAAOyG,OAAR,CAAezG,MAAM,UAArB,gCACA,cAAC,IAAOyG,OAAR,CAAezG,MAAM,YAArB,gCACA,cAAC,IAAOyG,OAAR,CAAezG,MAAM,YAArB,sCAGJ,oBAAI0B,UAAU,iBAAd,SAAgC6D,EAAM8J,WACtC,oBAAI3N,UAAU,iBAAd,SAAgC6D,EAAM+J,SACtC,oBAAI5N,UAAU,iBAAd,SACGkD,IAAOW,EAAMV,WAAWC,OAAO,gBAElC,oBAAIpD,UAAU,iBAAd,SAAgC6D,EAAM2I,UACtC,oBAAIxM,UAAU,iBAAd,SAAgC6D,EAAMnE,KAAK0C,eAIjD,wBAAO9B,MAAO,CAAEC,MAAO,QAAvB,UACE,uBAAOP,UAAU,kBAAjB,SACE,+BACE,oBAAIA,UAAU,iBAAd,sCACA,oBAAIA,UAAU,iBAAd,sCACA,oBAAIA,UAAU,iBAAd,sCACA,oBAAIA,UAAU,iBAAd,iCAGJ,uBAAOA,UAAU,kBAAjB,SACG6D,EAAMwB,SAAS1D,KAAI,SAAAP,GAAI,OACtB,qBAAmBpB,UAAU,gBAA7B,UACE,oBAAIA,UAAU,iBAAd,SAAgCoB,EAAKN,QAAQsB,OAC7C,oBAAIpC,UAAU,iBAAd,SAAgCoB,EAAKN,QAAQmC,QAC7C,oBAAIjD,UAAU,iBAAd,SAAgCoB,EAAKjD,QACrC,oBAAI6B,UAAU,iBAAd,SAAgCoB,EAAKN,QAAQc,QAJtCR,EAAKQ,aASpB,cAAC,IAAD,MA1DQiC,EAAMjC,KAtBD,IAAC4L,QCZTK,GAvBA,WAEb,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOpP,KAAK,IAAIoK,UAAWzD,GAAM0I,OAAK,IACtC,cAAC,IAAD,CAAOrP,KAAK,QAAQoK,UAAWzC,KAC/B,cAAC,IAAD,CAAO3H,KAAK,UAAUoK,UAAWpB,KACjC,cAAC,IAAD,CAAOhJ,KAAK,UAAUoK,UAAWX,KACjC,cAAC,IAAD,CAAOzJ,KAAK,QAAQoK,UAAWkE,KAE/B,cAAC,IAAD,CAAOtO,KAAK,cAAcoK,UAAWoE,KACrC,cAAC,GAAD,CAAcxO,KAAK,kBAAkBoK,UAAWH,KAChD,cAAC,GAAD,CAAYjK,KAAK,mBAAmBoK,UAAWI,KAC/C,cAAC,GAAD,CAAYxK,KAAK,mBAAmBoK,UAAWW,KAC/C,cAAC,GAAD,CAAY/K,KAAK,kBAAkBoK,UAAWwB,KAC9C,cAAC,GAAD,CAAY5L,KAAK,gBAAgBoK,UAAWqE,KAC5C,cAAC,IAAD,CAAOzO,KAAK,sBAAsBoK,UAAWqC,W,SCP/C6C,GAAyB,CAC7BzF,OAAQ,CACNV,QAAQ,EACRC,SAAS,EACTT,QAAS,IAEXO,OAAQ,CACNC,QAAQ,EACRC,SAAS,EACTT,QAAS,KAIE,SAAS4G,KAGrB,IAFDlP,EAEA,uDAFQiP,GACRE,EACA,uCACA,OAAQA,EAAO1L,MACb,KAAKwE,GACH,OAAO,2BACFjI,GADL,IAEEwJ,OAAQ,CACNV,QAAQ,EACRC,SAAS,KAGf,KAAKb,GACH,OAAO,2BACFlI,GADL,IAEEwJ,OAAQ,CACNV,QAAQ,EACRC,SAAS,KAGf,KAAKZ,GACH,OAAO,2BACFnI,GADL,IAEEwJ,OAAQ,CACNV,QAAQ,EACRC,SAAS,EACTT,QAAS6G,EAAO7G,WAGtB,KAAKF,GACH,OAAO,2BACFpI,GADL,IAEEwJ,OAAQ,CACNV,QAAQ,EACRC,SAAS,EACTT,QAAS,MAGf,KAAKC,GACH,OAAO,2BACFvI,GADL,IAEE6I,OAAQ,CACNC,QAAQ,EACRC,SAAS,EACTT,QAAS,MAGf,KAAKE,GACH,OAAO,2BACFxI,GADL,IAEE6I,OAAQ,CACNC,QAAQ,EACRC,SAAS,EACTT,QAAS,MAGf,KAAKG,GACH,OAAO,2BACFzI,GADL,IAEE6I,OAAQ,CACNC,QAAQ,EACRC,SAAS,EACTT,QAAS6G,EAAO7G,WAGtB,QACE,OAAOtI,GC5Fb,IAAMoP,GAA8B,CAClC7K,SAAU,CACRuE,QAAQ,EACRC,SAAS,EACT7C,OAAQ,KAIG,SAASmJ,KAGrB,IAFDrP,EAEA,uDAFQoP,GACRD,EACA,uCACA,OAAQA,EAAO1L,MACb,KAAKe,EACH,OAAO,2BACFxE,GADL,IAEEuE,SAAU,CACRuE,QAAQ,EACRC,SAAS,EACT7C,OAAQ,MAGd,KAAKzB,EACH,OAAO,2BACFzE,GADL,IAEEuE,SAAU,CACRuE,QAAQ,EACRC,SAAS,EACT7C,OAAQiJ,EAAOjK,WAGrB,QACE,OAAOlF,G,wBCJPoP,GAA6B,CACjC/K,UAAW,CACTyE,QAAQ,EACRC,SAAS,EACTxC,SAAU,IAEZtC,KAAM,CACJ6E,QAAQ,EACRC,SAAS,EACTxC,SAAU,IAEZZ,OAAQ,GACRoC,OAAQ,CACNgB,SAAS,EACTD,QAAQ,EACR5C,OAAQ,CACN2B,KAAM,EACNG,KAAM,KAGVhG,QAAS,CACP8G,QAAQ,EACRC,SAAS,EACT7C,OAAQ,CACNpD,IAAK,GACLQ,KAAM,GACNa,MAAO,EACPJ,YAAa,GACbQ,SAAU,CACRzB,IAAK,GACLQ,KAAM,IAERgM,SAAU,EACVrL,KAAM,EACNsL,MAAO,IAAI5D,SACX6D,UAAU,EACVnL,UAAW,MAKF,SAASoL,KAGrB,IAFDzP,EAEA,uDAFQoP,GACRD,EACA,uCACA,OAAQA,EAAO1L,MACb,KAAKkB,EACH,OAAO,2BACF3E,GADL,mBAEGmP,EAAOrK,OAFV,2BAGO9E,EAAwB,cAAlBmP,EAAOrK,OAAyB,YAAc,SAH3D,IAIIgE,QAAQ,EACRC,SAAS,MAGf,KAAKnE,EACH,OAAO,2BACF5E,GADL,mBAEGmP,EAAOrK,OAAS,CACfgE,QAAQ,EACRC,SAAS,EACTxC,SAAU4I,EAAOjK,WAGvB,KAAKE,EACH,OAAO,2BACFpF,GADL,IAEE2F,OAAQwJ,EAAO5I,WAEnB,KAAKlB,EACH,OAAO,2BACFrF,GADL,IAEE+H,OAAQ,CACNe,QAAQ,EACRC,SAAS,EACT7C,OAAQ,CACN2B,KAAM,EACNG,KAAMhI,EAAM+H,OAAO7B,OAAO8B,SAIlC,KAAK1C,EACH,IAAI0C,EACc,IAAhBmH,EAAO5H,KACH4H,EAAOjK,QAAQ8C,KADnB,uBAEQhI,EAAM+H,OAAO7B,OAAO8B,MAF5B,aAEqCmH,EAAOjK,QAAQ8C,OAEtD,OAAO,2BACFhI,GADL,IAEE+H,OAAQ,CACNe,QAAQ,EACRC,SAAS,EACT7C,OAAQ,CACN2B,KAAMsH,EAAOjK,QAAQ2C,KACrBG,WAIR,KAAKzC,EACH,OAAO,2BACFvF,GADL,IAEEgC,QAAQ,2BACHhC,EAAMgC,SADJ,IAEL8G,QAAQ,EACRC,SAAS,MAGf,KAAKvD,EACH,OAAO,2BACFxF,GADL,IAEEgC,QAAS,CACP8G,QAAQ,EACRC,SAAS,EACT7C,OAAQiJ,EAAOjK,WAIrB,QACE,OAAOlF,GChJb,IAQe0P,GARW,SAACC,GAAD,OACxBC,2BAAgB,CACd3P,OAAQ4P,YAAcF,GACtB/G,KAAMsG,GACN3K,SAAU8K,GACVrN,QAASyN,M,mDCNHK,I,aASAC,I,aAUeC,IAnBzB,SAAUF,GAAYX,GAAtB,kEAEI,OAFJ,kBAEUrE,KAAMC,KAAN,UAAcnL,EAAd,WAA4BuP,EAAOjK,SAF7C,OAGI,OAHJ,SAGUyJ,arBkB+C,CACvDlL,KAAMyE,KqBtBR,8BAKI,OALJ,mCAKUyG,aAAItG,GAAW,KAAM6C,SAASlD,KAAKmD,QAL7C,sDASA,SAAU4E,GAAaZ,GAAvB,wEAEmB,OAFnB,kBAEyBrE,KAAMC,KAAN,UAAcnL,EAAd,WAA4BuP,EAAOjK,SAF5D,OAII,OAFIgG,EAFR,OAGI1M,aAAawE,QAAQ,MAAOtE,KAAKuE,UAAUiI,EAASlD,OAHxD,SAIU2G,arBqD+C,CACvDlL,KAAM+E,KqB1DR,8BAMI,OANJ,mCAMUmG,aAAIjG,GAAW,KAAMwC,SAASlD,KAAKmD,QAN7C,sDAUe,SAAU6E,KAAV,kEAEb,OAFa,SAEPC,aAAUhI,GAAQ6H,IAFX,OAIb,OAJa,SAIPG,aAAU1H,GAAQwH,IAJX,wC,iBC7BLG,I,aAKeC,IALzB,SAAUD,KAAV,wEACiB,OADjB,SACuBpF,KAAM0D,IAAN,UAAyB5O,EAAzB,gBADvB,OAEE,OADIsL,EADN,gBAEQyD,c9BUNzJ,E8BV6BgG,EAASlD,K9BWR,CAC9BvE,KAAMgB,EACNS,a8BfF,iC9BWkC,IAChCA,I8BZF,IAKe,SAAUiL,KAAV,kEAEb,OAFa,SAEPF,aAAUzL,EAAc0L,IAFjB,wC,iBCiBLE,I,aAQAC,I,aASAC,I,aAKAC,I,aAKeC,IA3BzB,SAAUJ,GAAV,iFAEiB,OAFYtL,EAA7B,EAA6BA,OAAQC,EAArC,EAAqCA,MAAOC,EAA5C,EAA4CA,MAA5C,SAEuB8F,KAAM0D,IAAN,UAAwB5O,EAAxB,aAAwC,CAC3D6Q,OAAQ,CAAE3L,SAAQC,QAAOC,WAH7B,OAKE,OAHIkG,EAFN,gBAKQyD,aAAI1J,EAAkBiG,EAASlD,KAAMlD,IAL7C,wCAQA,SAAUuL,GAAV,iFAGiB,OAHjB,IACEnL,QAAWS,EADb,EACaA,OAAQpB,EADrB,EACqBA,SADrB,SAGuBuG,KAAM0D,IAAN,UAAa5O,EAAb,oBAAoC,CACvD6Q,OAAQ,CAAE9K,SAAQpB,cAJtB,OAME,OAHI2G,EAHN,gBAMQyD,c9B0BNpI,E8B1B+B2E,EAASlD,K9B2BR,CAChCvE,KAAM2B,EACNmB,c8BnCF,iC9B+BoC,IAClCA,I8BhCF,IASA,SAAU+J,GAAoBnB,GAA9B,wEACiB,OADjB,SACuBrE,KAAMC,KAAN,UAAcnL,EAAd,oBAAqCuP,EAAOjK,SADnE,OAEE,OADIgG,EADN,gBAEQyD,c9BkENzJ,E8BlE+BgG,EAASlD,K9BsExCT,E8BtE8C4H,EAAOjK,QAAQqC,K9BuE7B,CAChC9D,KAAM6B,EACNJ,UACAqC,U8B5EF,iC9BmEoC,IAClCrC,EAIAqC,I8BxEF,IAKA,SAAUgJ,GAAV,6EACiB,OADgBrL,EAAjC,EAAiCA,QAAjC,SACuB4F,KAAM0D,IAAN,UAAa5O,EAAb,oBAA4BsF,EAAQmH,YAD3D,OAEE,OADInB,EADN,gBAEQyD,aAAIlJ,GAAsByF,EAASlD,OAF3C,wCAKe,SAAUwI,KAAV,kEACb,OADa,SACPP,aAAUtL,EAAayL,IADhB,OAEb,OAFa,SAEPH,aAAU9K,EAAgBkL,IAFnB,OAGb,OAHa,SAGPJ,aAAU5K,EAAgBiL,IAHnB,OAIb,OAJa,SAIPL,aAAU1K,EAAmBgL,IAJtB,wC,iBClDUG,IAAV,SAAUA,KAAV,kEACb,OADa,SACPC,aAAI,CAACX,KAAYG,KAAgBK,OAD1B,wC,cCGFb,GAAUiB,eAEjBC,GAAiBC,eAEjBC,GAAQC,uBACZtB,GAAkBC,IAElBsB,+BACEC,2BAAgBC,aAAiBxB,IAAUkB,MAI/CA,GAAeO,IAAIV,IAEJK,U,OCZf1F,QAAQC,IAAI1L,GACZyL,QAAQC,IAAI3J,cAEZ0P,IAASpH,OACP,cAAC,IAAD,CAAU8G,MAAOA,GAAjB,SAEE,cAAC,IAAD,CAAiBpB,QAASA,GAA1B,SACE,cAAC,EAAD,UACE,cAAC,GAAD,UAIN2B,SAASC,eAAe,W","file":"static/js/main.356e6360.chunk.js","sourcesContent":["import { Jwt } from \"../store/models/auth\"\n\nexport function isAuth(): boolean | Jwt {\n  const jwt = localStorage.getItem(\"jwt\")\n  if (jwt) return JSON.parse(jwt)\n  return false\n}\n","/**\n * 将商品添加到购物车\n */\n\nimport { Product } from \"../store/models/product\"\n\nexport interface CartItem extends Product {\n  count: number\n}\n\nexport const addItem = (item: Product, next: () => void) => {\n  let cart: CartItem[] = []\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\")!)\n    }\n    cart.push({\n      ...item,\n      count: 1\n    })\n  }\n  cart = Array.from(new Set(cart.map(item => item._id))).map(item => {\n    return cart.find(product => product._id === item)\n  }) as CartItem[]\n\n  localStorage.setItem(\"cart\", JSON.stringify(cart))\n\n  next()\n}\n\n/**\n * 获取本地购物车数据\n */\n\nexport const getCart = () => {\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      return JSON.parse(localStorage.getItem(\"cart\")!) as CartItem[]\n    }\n  }\n  return []\n}\n\n/**\n * 更改购物车中商品的数量\n */\nexport const updateItem = (productId: string, count: number) => {\n  let cart: CartItem[] = []\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\")!)\n    }\n    cart.forEach((item, index) => {\n      if (item._id === productId) {\n        cart[index].count = count\n      }\n    })\n    localStorage.setItem(\"cart\", JSON.stringify(cart))\n  }\n  return cart\n}\n\n/**\n * 删除购物车中的商品\n */\nexport const deleteItem = (productId: string) => {\n  let cart: CartItem[] = []\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\")!)\n    }\n    cart.forEach((item, index) => {\n      if (item._id === productId) {\n        cart.splice(index, 1)\n      }\n    })\n    localStorage.setItem(\"cart\", JSON.stringify(cart))\n  }\n  return cart\n}\n\n/**\n * 获取商品数量\n */\nexport const itemCount = () => {\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      return JSON.parse(localStorage.getItem(\"cart\")!).length\n    }\n  }\n  return 0\n}\n","import React, { Dispatch, useState, SetStateAction, FC } from \"react\"\nimport { itemCount } from \"./helpers/cart\"\n\nexport const TotalContext = React.createContext<\n  [number, Dispatch<SetStateAction<number>>]\n>([0, () => null])\n\ninterface Props {\n  children: React.ReactNode\n}\n\nconst AnotherStore: FC<Props> = ({ children }) => {\n  const [count, setCount] = useState(itemCount())\n  return (\n    <TotalContext.Provider value={[count, setCount]}>\n      {children}\n    </TotalContext.Provider>\n  )\n}\n\nexport default AnotherStore\n","import { Badge, Menu } from \"antd\"\nimport React, { useContext, useEffect } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { RouterState } from \"connected-react-router\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Jwt } from \"../../store/models/auth\"\nimport { TotalContext } from \"../../anotherStore\"\nimport { itemCount } from \"../../helpers/cart\"\n\nfunction useActive(currentPath: string, path: string): string {\n  return currentPath === path ? \"ant-menu-item-selected\" : \"\"\n}\n\nconst Navigation = () => {\n  const router = useSelector<AppState, RouterState>(state => state.router)\n  const pathname = router.location.pathname\n  const isHome = useActive(pathname, \"/\")\n  const isShop = useActive(pathname, \"/shop\")\n  const isSignin = useActive(pathname, \"/signin\")\n  const isSignup = useActive(pathname, \"/signup\")\n  const isCart = useActive(pathname, \"/cart\")\n  const isDashboard = useActive(pathname, getDashboarUrl())\n\n  const [count, setCount] = useContext(TotalContext)\n\n  useEffect(() => {\n    setCount(itemCount())\n  })\n\n  function getDashboarUrl() {\n    let url = \"/user/dashboard\"\n    if (isAuth()) {\n      const {\n        user: { role }\n      } = isAuth() as Jwt\n\n      if (role === 1) {\n        url = \"/admin/dashboard\"\n      }\n    }\n    return url\n  }\n\n  return (\n    <Menu mode=\"horizontal\" selectable={false}>\n      <Menu.Item className={isHome}>\n        <Link to=\"/\">首页</Link>\n      </Menu.Item>\n      <Menu.Item className={isShop}>\n        <Link to=\"/shop\">商城</Link>\n      </Menu.Item>\n      <Menu.Item className={isCart}>\n        <Link to=\"/cart\">\n          购物车\n          <Badge count={count} offset={[5, -10]} />\n        </Link>\n      </Menu.Item>\n      {!isAuth() && (\n        <>\n          <Menu.Item className={isSignin}>\n            <Link to=\"/signin\">登录</Link>\n          </Menu.Item>\n          <Menu.Item className={isSignup}>\n            <Link to=\"/signup\">注册</Link>\n          </Menu.Item>\n        </>\n      )}\n      {isAuth() && (\n        <Menu.Item className={isDashboard}>\n          <Link to={getDashboarUrl()}>dashboard</Link>\n        </Menu.Item>\n      )}\n    </Menu>\n  )\n}\n\nexport default Navigation\n","export let API: string\n\nif (process.env.NODE_ENV === \"development\") {\n  API = process.env.REACT_APP_DEVLOPMENT_API_URL!\n} else if (process.env.NODE_ENV === \"production\") {\n  API = process.env.REACT_APP_PRODUCTION_API_URL!\n}\n","import { PageHeader } from \"antd\"\nimport React, { FC } from \"react\"\nimport Navigation from \"./Navigation\"\n\ninterface Props {\n  children: React.ReactNode\n  title: string\n  subTitle: string\n}\n\nconst Layout: FC<Props> = ({ children, title, subTitle }) => {\n  return (\n    <div>\n      <Navigation />\n      <PageHeader className=\"jumbotron\" title={title} subTitle={subTitle} />\n      <div style={{ width: \"85%\", margin: \"0 auto\" }}>{children}</div>\n    </div>\n  )\n}\n\nexport default Layout\n","import { Button, Card, Col, Image, Row, Typography } from \"antd\"\nimport moment from \"moment\"\nimport React, { FC } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { API } from \"../../config\"\nimport { Product } from \"../../store/models/product\"\nimport { addItem } from \"../../helpers/cart\"\nimport { useDispatch } from \"react-redux\"\nimport { push } from \"connected-react-router\"\n\nconst { Title, Paragraph } = Typography\n\ninterface Props {\n  product: Product\n  showViewProduct?: boolean\n  showCartBtn?: boolean\n}\n\nconst ProductItem: FC<Props> = ({\n  product,\n  showViewProduct = true,\n  showCartBtn = true\n}) => {\n  const dispatch = useDispatch()\n\n  const addToCart = () => {\n    addItem(product, () => {\n      dispatch(push(\"/cart\"))\n    })\n  }\n\n  const showButtons = () => {\n    let buttonArray = []\n    if (showViewProduct)\n      buttonArray.push(\n        <Button type=\"link\">\n          <Link to={`/product/${product._id}`}>查看详情</Link>\n        </Button>\n      )\n    if (showCartBtn) {\n      buttonArray.push(\n        <Button type=\"link\" onClick={addToCart}>\n          加入购物车\n        </Button>\n      )\n    }\n    return buttonArray\n  }\n\n  return (\n    <Card\n      cover={\n        // 为了提高效率 图片是单独请求的\n        <Image\n          src={`${API}/product/photo/${product._id}`}\n          alt={product.name}\n        />\n      }\n      actions={showButtons()}\n    >\n      <Title level={5}>{product.name}</Title>\n      {/* 超过2行折行 */}\n      <Paragraph ellipsis={{ rows: 2 }}>{product.description}</Paragraph>\n      <Row>\n        <Col span=\"12\">销量: {product.sold}</Col>\n        <Col span=\"12\" style={{ textAlign: \"right\" }}>\n          价格: {product.price}\n        </Col>\n      </Row>\n      <Row>\n        <Col span=\"12\">\n          上架时间: {moment(product.createdAt).format(\"YYYY-MM-DD\")}\n        </Col>\n        <Col span=\"12\" style={{ textAlign: \"right\" }}>\n          所属分类: {product.category.name}\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default ProductItem\n","import { Category } from \"../models/category\"\nexport const GET_CATEGORY = \"GET_CATEGORY\"\nexport const GET_CATEGORY_SUCCESS = \"GET_CATEGORY_SUCCESS\"\n\nexport interface GetCategoryAction {\n  type: typeof GET_CATEGORY\n}\n\nexport interface GetCategorySuccessAction {\n  type: typeof GET_CATEGORY_SUCCESS\n  payload: Category[]\n}\n\nexport const getCategory = (): GetCategoryAction => ({\n  type: GET_CATEGORY\n})\n\nexport const getCategorySuccess = (\n  payload: Category[]\n): GetCategorySuccessAction => ({\n  type: GET_CATEGORY_SUCCESS,\n  payload\n})\n\nexport type CategoryUnionType = GetCategoryAction | GetCategorySuccessAction\n","import { Product } from \"../models/product\"\nexport const GET_PRODUCT = \"GET_PRODUCT\"\nexport const GET_PRODUCT_SUCCESS = \"GET_PRODUCT_SUCCESS\"\n\n// sortBy=createdAt&order=asc&limit=10\n\nexport interface GetProductAction {\n  type: typeof GET_PRODUCT\n  sortBy: string\n  order: string\n  limit: number\n}\n\nexport interface GetProductSuccessAction {\n  type: typeof GET_PRODUCT_SUCCESS\n  payload: Product[]\n  sortBy: string\n}\n\nexport const getProduct = (\n  sortBy: string,\n  order: string = \"desc\",\n  limit: number = 10\n): GetProductAction => ({\n  type: GET_PRODUCT,\n  sortBy,\n  order,\n  limit\n})\n\nexport const getProductSuccess = (\n  payload: Product[],\n  sortBy: string\n): GetProductSuccessAction => ({\n  type: GET_PRODUCT_SUCCESS,\n  payload,\n  sortBy\n})\n\n/**\n * 搜索商品\n */\n\nexport const SEARCH_PRODUCT = \"SEARCH_PRODUCT\"\nexport const SEARCH_PRODUCT_SUCCESS = \"SEARCH_PRODUCT_SUCCESS\"\n\nexport interface SearchProductAction {\n  type: typeof SEARCH_PRODUCT\n  payload: {\n    category: string\n    search: string\n  }\n}\n\nexport interface SearchProductSuccessAction {\n  type: typeof SEARCH_PRODUCT_SUCCESS\n  products: Product[]\n}\n\nexport const searchProduct = (payload: {\n  category: string\n  search: string\n}): SearchProductAction => ({\n  type: SEARCH_PRODUCT,\n  payload\n})\n\nexport const SearchProductSuccess = (\n  products: Product[]\n): SearchProductSuccessAction => ({\n  type: SEARCH_PRODUCT_SUCCESS,\n  products\n})\n\n/**\n * 和筛选相关的action\n */\n\nexport const FILTER_PRODUCT = \"FILTER_PRODUCT\"\nexport const FILTER_PRODUCT_SUCCESS = \"FILTER_PRODUCT_SUCCESS\"\n\nexport interface FilterPayload {\n  order?: string\n  sortBy?: string\n  limit?: number\n  skip: number\n  filters?: {\n    category: string[]\n    price: number[]\n  }\n}\n\nexport interface FilterProductAction {\n  type: typeof FILTER_PRODUCT\n  payload: FilterPayload\n}\n\nexport interface FilterProductSuccessAction {\n  type: typeof FILTER_PRODUCT_SUCCESS\n  payload: {\n    size: number\n    data: Product[]\n  }\n  skip: number\n}\n\nexport const filterProduct = (\n  payload: FilterPayload\n): FilterProductAction => ({\n  type: FILTER_PRODUCT,\n  payload\n})\nexport const filterProductSuccess = (\n  payload: {\n    size: number\n    data: Product[]\n  },\n  skip: number\n): FilterProductSuccessAction => ({\n  type: FILTER_PRODUCT_SUCCESS,\n  payload,\n  skip\n})\n\n// 通过产品id获取产品详情\nexport const GET_PRODUCT_BY_ID = \"GET_PRODUCT_BY_ID\"\nexport const GET_PRODUCT_BY_ID_SUCCESS = \"GET_PRODUCT_BY_ID_SUCCESS\"\n\nexport interface GetProductByIdAction {\n  type: typeof GET_PRODUCT_BY_ID\n  payload: {\n    productId: string\n  }\n}\n\nexport interface GetProductByIdSuccessAction {\n  type: typeof GET_PRODUCT_BY_ID_SUCCESS\n  payload: Product\n}\n\nexport const getProductById = (payload: {\n  productId: string\n}): GetProductByIdAction => ({\n  type: GET_PRODUCT_BY_ID,\n  payload\n})\n\nexport const getProductByIdSuccess = (\n  payload: Product\n): GetProductByIdSuccessAction => ({\n  type: GET_PRODUCT_BY_ID_SUCCESS,\n  payload\n})\n\nexport type ProductUnionType =\n  | GetProductAction\n  | GetProductSuccessAction\n  | SearchProductAction\n  | SearchProductSuccessAction\n  | FilterProductAction\n  | FilterProductSuccessAction\n  | GetProductByIdAction\n  | GetProductByIdSuccessAction\n","import { Button, Col, Divider, Form, Input, Row, Select } from \"antd\"\nimport React, { useEffect } from \"react\"\nimport ProductItem from \"./ProductItem\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getCategory } from \"../../store/actions/category.actions\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { CategoryState } from \"../../store/reducers/category.reducer\"\nimport { searchProduct } from \"../../store/actions/product.actions\"\nimport { ProductState } from \"../../store/reducers/product.reducer\"\n\nconst Search = () => {\n  const dispatch = useDispatch()\n\n  const { category } = useSelector<AppState, CategoryState>(\n    state => state.category\n  )\n\n  const { search } = useSelector<AppState, ProductState>(\n    state => state.product\n  )\n\n  useEffect(() => {\n    dispatch(getCategory())\n  }, [])\n\n  const onFinish = (value: { category: string; search: string }) => {\n    dispatch(\n      searchProduct({ category: value.category, search: value.search })\n    )\n  }\n\n  return (\n    <>\n      <Form\n        onFinish={onFinish}\n        layout=\"inline\"\n        initialValues={{ category: \"All\" }}\n      >\n        <Input.Group compact>\n          <Form.Item name=\"category\">\n            <Select>\n              <Select.Option value=\"All\">所有分类</Select.Option>\n              {category.result.map(item => (\n                <Select.Option key={item._id} value={item._id}>\n                  {item.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item name=\"search\">\n            <Input placeholder=\"请输入搜索关键字\" />\n          </Form.Item>\n          <Form.Item>\n            <Button htmlType=\"submit\">搜索</Button>\n          </Form.Item>\n        </Input.Group>\n      </Form>\n      <Divider />\n      <Row gutter={[16, 16]}>\n        {search.map(item => (\n          <Col span=\"6\">\n            <ProductItem product={item} />\n          </Col>\n        ))}\n      </Row>\n    </>\n  )\n}\n\nexport default Search\n","import { Col, Row, Typography } from \"antd\"\nimport React, { useEffect } from \"react\"\nimport Layout from \"./Layout\"\nimport ProductItem from \"./ProductItem\"\nimport Search from \"./Search\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getProduct } from \"../../store/actions/product.actions\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { ProductState } from \"../../store/reducers/product.reducer\"\n\nconst { Title } = Typography\n\nconst Home = () => {\n  const dispatch = useDispatch()\n\n  const { createdAt, sold } = useSelector<AppState, ProductState>(\n    state => state.product\n  )\n\n  useEffect(() => {\n    dispatch(getProduct(\"createdAt\"))\n    dispatch(getProduct(\"sold\"))\n  }, [])\n\n  return (\n    <Layout title=\"拉勾电商\" subTitle=\"欢迎来到拉勾电商, 尽情享受吧\">\n      <Search />\n      <Title level={5}>最新上架</Title>\n      <Row gutter={[16, 16]}>\n        {createdAt.products.map(item => (\n          <Col key={item._id} span=\"6\">\n            <ProductItem product={item} />\n          </Col>\n        ))}\n      </Row>\n      <Title level={5}>最受欢迎</Title>\n      <Row gutter={[16, 16]}>\n        {sold.products.map(item => (\n          <Col key={item._id} span=\"6\">\n            <ProductItem product={item} />\n          </Col>\n        ))}\n      </Row>\n    </Layout>\n  )\n}\n\nexport default Home\n","import React, { useEffect, FC } from \"react\"\nimport { List, Typography, Checkbox as AntdCheckbox } from \"antd\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getCategory } from \"../../store/actions/category.actions\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { CategoryState } from \"../../store/reducers/category.reducer\"\nimport { CheckboxValueType } from \"antd/lib/checkbox/Group\"\n\nconst { Title } = Typography\n\ninterface Props {\n  handleFilter: (arg: string[]) => void\n}\n\nconst Checkbox: FC<Props> = ({ handleFilter }) => {\n  const dispatch = useDispatch()\n\n  const category = useSelector<AppState, CategoryState>(\n    state => state.category\n  )\n\n  useEffect(() => {\n    dispatch(getCategory())\n  }, [])\n\n  const onChange = (checkedValue: CheckboxValueType[]) => {\n    handleFilter(checkedValue as string[])\n  }\n\n  return (\n    <>\n      <Title level={4}>按照分类筛选</Title>\n      <AntdCheckbox.Group\n        className=\"checkBoxFilter\"\n        options={category.category.result.map(item => ({\n          label: item.name,\n          value: item._id\n        }))}\n        onChange={onChange}\n      />\n    </>\n  )\n}\n\nexport default Checkbox\n","import { Price } from \"../store/models/product\"\n\nconst prices: Price[] = [\n  {\n    id: 0,\n    name: \"不限制价格\",\n    array: []\n  },\n  {\n    id: 1,\n    name: \"1 - 50\",\n    array: [1, 50]\n  },\n  {\n    id: 2,\n    name: \"51 - 100\",\n    array: [51, 100]\n  },\n  {\n    id: 3,\n    name: \"101 - 150\",\n    array: [101, 150]\n  },\n  {\n    id: 4,\n    name: \"151 - 200\",\n    array: [151, 200]\n  },\n  {\n    id: 5,\n    name: \"201 - 500\",\n    array: [201, 500]\n  }\n]\n\nexport default prices\n","import React, { FC } from \"react\"\n\nimport { List, Radio, Typography } from \"antd\"\nimport prices from \"../../helpers/price\"\nimport { RadioChangeEvent } from \"antd/lib/radio\"\n\nconst { Title } = Typography\n\ninterface Props {\n  handleFilter: (arg: number[]) => void\n}\n\nconst RadioBox: FC<Props> = ({ handleFilter }) => {\n  const onChange = (event: RadioChangeEvent) => {\n    handleFilter(event.target.value)\n  }\n\n  return (\n    <>\n      <Title level={4}>按照价格筛选</Title>\n      <Radio.Group>\n        <List\n          dataSource={prices}\n          renderItem={item => (\n            <List.Item>\n              <Radio onChange={onChange} value={item.array}>\n                {item.name}\n              </Radio>\n            </List.Item>\n          )}\n        />\n      </Radio.Group>\n    </>\n  )\n}\n\nexport default RadioBox\n","import { Button, Col, Empty, Row, Space } from \"antd\"\nimport React, { useState, useEffect } from \"react\"\nimport Checkbox from \"./CheckBox\"\nimport Layout from \"./Layout\"\nimport RadioBox from \"./RadioBox\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { filterProduct } from \"../../store/actions/product.actions\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { ProductState } from \"../../store/reducers/product.reducer\"\nimport ProductItem from \"./ProductItem\"\n\nconst Shop = () => {\n  const dispatch = useDispatch()\n\n  const [skip, setSkip] = useState<number>(0)\n\n  const product = useSelector<AppState, ProductState>(state => state.product)\n\n  const [myFilters, setMyFilter] = useState<{\n    category: string[]\n    price: number[]\n  }>({ category: [], price: [] })\n\n  useEffect(() => {\n    setSkip(0)\n  }, [myFilters])\n\n  useEffect(() => {\n    dispatch(filterProduct({ filters: myFilters, skip }))\n  }, [myFilters, skip])\n\n  const filterDOM = () => (\n    <Space size=\"middle\" direction=\"vertical\">\n      <Checkbox\n        handleFilter={(filters: string[]) => {\n          setMyFilter({ ...myFilters, category: filters })\n        }}\n      />\n      <RadioBox\n        handleFilter={(filters: number[]) => {\n          setMyFilter({ ...myFilters, price: filters })\n        }}\n      />\n    </Space>\n  )\n\n  const productDOM = () => (\n    <Row gutter={[16, 16]}>\n      {product.filter.result.data.map(item => (\n        <Col key={item._id} span=\"6\">\n          <ProductItem product={item} />\n        </Col>\n      ))}\n    </Row>\n  )\n\n  const loadMoreButton = () => {\n    return (\n      <Row>\n        {product.filter.result.size >= 4 && (\n          <Button onClick={loadMore}>加载更多</Button>\n        )}\n      </Row>\n    )\n  }\n\n  const loadMore = () => {\n    setSkip(skip + 4)\n  }\n\n  const noData = () => {\n    return <Row>{product.filter.result.size === 0 && <Empty />}</Row>\n  }\n\n  return (\n    <Layout title=\"拉勾商城\" subTitle=\"挑选你喜欢的商品吧\">\n      <Row>\n        <Col span=\"4\">{filterDOM()}</Col>\n        <Col span=\"20\">\n          {productDOM()} {loadMoreButton()} {noData()}\n        </Col>\n      </Row>\n    </Layout>\n  )\n}\n\nexport default Shop\n","/**\n * 注册\n */\nexport const SIGNUP = \"SIGNUP\"\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\"\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\"\nexport const RESET_SIGNUP = \"RESET_SIGNUP\"\n\nexport interface SignupPayload {\n  email: string\n  name: string\n  password: string\n}\n\nexport interface SignupAction {\n  type: typeof SIGNUP\n  payload: SignupPayload\n}\n\nexport interface SignupSuccessAction {\n  type: typeof SIGNUP_SUCCESS\n}\n\nexport interface SignupFailAction {\n  type: typeof SIGNUP_FAIL\n  message: string\n}\n\nexport interface ResetSignupAction {\n  type: typeof RESET_SIGNUP\n}\n\nexport const signup = (payload: SignupPayload): SignupAction => ({\n  type: SIGNUP,\n  payload\n})\n\nexport const signupSuccess = (): SignupSuccessAction => ({\n  type: SIGNUP_SUCCESS\n})\n\nexport const signupFail = (message: string): SignupFailAction => ({\n  type: SIGNUP_FAIL,\n  message\n})\n\nexport const resetSignup = (): ResetSignupAction => ({\n  type: RESET_SIGNUP\n})\n\n/**\n * 登录\n */\n\nexport const SIGNIN = \"SIGNIN\"\nexport const SIGNIN_SUCCESS = \"SIGNIN_SUCCESS\"\nexport const SIGNIN_FAIL = \"SIGNIN_FAIL\"\n\nexport interface SigninPayload {\n  email: string\n  password: string\n}\n\nexport interface SigninAction {\n  type: typeof SIGNIN\n  payload: SigninPayload\n}\n\nexport interface SigninSuccessAction {\n  type: typeof SIGNIN_SUCCESS\n}\n\nexport interface SigninFailAction {\n  type: typeof SIGNIN_FAIL\n  message: string\n}\n\nexport const signin = (payload: SigninPayload): SigninAction => ({\n  type: SIGNIN,\n  payload\n})\n\nexport const signinSuccess = (): SigninSuccessAction => ({\n  type: SIGNIN_SUCCESS\n})\n\nexport const signinFail = (message: string): SigninFailAction => ({\n  type: SIGNIN_FAIL,\n  message\n})\n\nexport type AuthUnionType =\n  | SignupAction\n  | SignupSuccessAction\n  | SignupFailAction\n  | ResetSignupAction\n  | SigninAction\n  | SigninSuccessAction\n  | SigninFailAction\n","import { Button, Form, Input, Result } from \"antd\"\nimport React from \"react\"\nimport Layout from \"./Layout\"\nimport { signin, SigninPayload } from \"../../store/actions/auth.actions\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { AuthState } from \"../../store/reducers/auth.reducer\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Jwt } from \"../../store/models/auth\"\nimport { Redirect } from \"react-router-dom\"\n\nconst Signin = () => {\n  // 获取 dispatch\n  const dispatch = useDispatch()\n  // 登录表单提交\n  const onFinish = (value: SigninPayload) => {\n    // 发送登录请求\n    dispatch(signin(value))\n  }\n  // 1. 获取登录结果\n  const auth = useSelector<AppState, AuthState>(state => state.auth)\n  // 2. 登录失败 显示错误信息\n  const showError = () => {\n    if (auth.signin.loaded && !auth.signin.success) {\n      return (\n        <Result\n          status=\"warning\"\n          title=\"登录失败\"\n          subTitle={auth.signin.message}\n        />\n      )\n    }\n  }\n  // 3. 登录成功 根据角色跳转到对应的管理页面\n  const redirectToDashboard = () => {\n    const auth = isAuth()\n    if (auth) {\n      const {\n        user: { role }\n      } = auth as Jwt\n\n      if (role === 0) {\n        // 注册用户\n        return <Redirect to=\"/user/dashboard\" />\n      } else {\n        // 管理员\n        return <Redirect to=\"/admin/dashboard\" />\n      }\n    }\n  }\n\n  const signinForm = () => (\n    <Form onFinish={onFinish}>\n      <Form.Item name=\"email\" label=\"邮箱\">\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"password\" label=\"密码\">\n        <Input.Password />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          登录\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n  // 4. 处理导航链接 已登录 隐藏 [登录, 注册] 显示 [dashboard]\n  return (\n    <Layout title=\"登录\" subTitle=\"嘿, 小伙伴, 立即登录到拉钩电商系统吧\">\n      {showError()}\n      {redirectToDashboard()}\n      {signinForm()}\n    </Layout>\n  )\n}\n\nexport default Signin\n","import { Button, Form, Input, Result } from \"antd\"\nimport React, { useEffect } from \"react\"\nimport Layout from \"./Layout\"\nimport {\n  SignupPayload,\n  signup,\n  resetSignup\n} from \"../../store/actions/auth.actions\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { AuthState } from \"../../store/reducers/auth.reducer\"\nimport { Link } from \"react-router-dom\"\n\nconst Signup = () => {\n  // 获取 dispatch 方法\n  const dispatch = useDispatch()\n  // 获取注册结果\n  const auth = useSelector<AppState, AuthState>(state => state.auth)\n\n  const [form] = Form.useForm()\n\n  // 注册表单提交\n  const onFinish = (value: SignupPayload) => {\n    // 发送注册请求\n    dispatch(signup(value))\n  }\n\n  // 1. 注册成功 清空表单\n  useEffect(() => {\n    if (auth.signup.loaded && auth.signup.success) {\n      form.resetFields()\n    }\n  }, [auth])\n\n  // 2. 注册成功 显示成功的提示信息\n  const showSuccess = () => {\n    if (auth.signup.loaded && auth.signup.success) {\n      return (\n        <Result\n          status=\"success\"\n          title=\"注册成功\"\n          extra={[\n            <Button type=\"primary\">\n              <Link to=\"/signin\">登录</Link>\n            </Button>\n          ]}\n        />\n      )\n    }\n  }\n  // 3. 注册失败 显示失败的提示信息\n  const showError = () => {\n    if (auth.signup.loaded && !auth.signup.success) {\n      return (\n        <Result\n          status=\"warning\"\n          title=\"注册失败\"\n          subTitle={auth.signup.message}\n        />\n      )\n    }\n  }\n  // 4. 离开页面之前 重置状态\n  useEffect(() => {\n    return () => {\n      dispatch(resetSignup())\n    }\n  }, [])\n\n  const signupForm = () => (\n    <Form form={form} onFinish={onFinish}>\n      <Form.Item name=\"name\" label=\"昵称\">\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"password\" label=\"密码\">\n        <Input.Password />\n      </Form.Item>\n      <Form.Item name=\"email\" label=\"邮箱\">\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"email\">\n        <Button type=\"primary\" htmlType=\"submit\">\n          注册\n        </Button>\n      </Form.Item>\n    </Form>\n  )\n\n  return (\n    <Layout title=\"注册\" subTitle=\"还没有账号? 注册一个吧.\">\n      {showSuccess()}\n      {showError()}\n      {signupForm()}\n    </Layout>\n  )\n}\n\nexport default Signup\n","import React from \"react\"\nimport Layout from \"../core/Layout\"\n\nconst Dashboard = () => {\n  \n  return (\n    <Layout title=\"用户 Dashboard\" subTitle=\"\">\n      Dashboard\n    </Layout>\n  )\n}\n\nexport default Dashboard\n","import React, { FC } from \"react\"\nimport { Redirect, Route, RouteProps } from \"react-router-dom\"\nimport { isAuth } from \"../../helpers/auth\"\n\ninterface PrivateRouteProps extends RouteProps {\n  component: React.ComponentType<any>\n}\n\nconst PrivateRoute: FC<PrivateRouteProps> = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        const auth = isAuth()\n        if (auth) {\n          return <Component {...props} />\n        }\n        return <Redirect to=\"/signin\" />\n      }}\n    />\n  )\n}\n\nexport default PrivateRoute\n","import { Col, Menu, Row } from \"antd\"\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Layout from \"../core/Layout\"\nimport {\n  ShoppingCartOutlined,\n  UserOutlined,\n  OrderedListOutlined\n} from \"@ant-design/icons\"\n\nimport { Typography, Descriptions } from \"antd\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Jwt } from \"../../store/models/auth\"\n\nconst { Title } = Typography\n\nconst AdminDashboard = () => {\n  const {\n    user: { name, email }\n  } = isAuth() as Jwt\n\n  const adminLinks = () => (\n    <>\n      <Title level={5}>管理员链接</Title>\n      <Menu>\n        <Menu.Item>\n          <ShoppingCartOutlined />\n          <Link to=\"/create/category\">添加分类</Link>\n        </Menu.Item>\n        <Menu.Item>\n          <UserOutlined />\n          <Link to=\"/create/product\">添加产品</Link>\n        </Menu.Item>\n        <Menu.Item>\n          <OrderedListOutlined />\n          <Link to=\"/admin/orders\">订单列表</Link>\n        </Menu.Item>\n      </Menu>\n    </>\n  )\n\n  const adminInfo = () => (\n    <Descriptions title=\"管理员信息\" bordered>\n      <Descriptions.Item label=\"昵称\">{name}</Descriptions.Item>\n      <Descriptions.Item label=\"邮件\">{email}</Descriptions.Item>\n      <Descriptions.Item label=\"角色\">管理员</Descriptions.Item>\n    </Descriptions>\n  )\n\n  return (\n    <Layout title=\"管理员 Dashboard\" subTitle=\"\">\n      <Row>\n        <Col span=\"4\">{adminLinks()}</Col>\n        <Col span=\"20\">{adminInfo()}</Col>\n      </Row>\n    </Layout>\n  )\n}\n\nexport default AdminDashboard\n","import React, { FC } from \"react\"\nimport { Redirect, Route, RouteProps } from \"react-router-dom\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Jwt } from \"../../store/models/auth\"\n\ninterface PrivateRouteProps extends RouteProps {\n  component: React.ComponentType<any>\n}\n\nconst AdminRoute: FC<PrivateRouteProps> = ({\n  component: Component,\n  ...rest\n}) => {\n  \n  return (\n    <Route\n      {...rest}\n      render={props => {\n        const auth = isAuth()\n        if (auth) {\n          const {\n            user: { role }\n          } = auth as Jwt\n          if (role === 1) return <Component {...props} />\n        }\n        return <Redirect to=\"/signin\" />\n      }}\n    />\n  )\n}\n\nexport default AdminRoute\n","import { Button, Form, Input, message } from \"antd\"\nimport React, { useEffect, useState } from \"react\"\nimport Layout from \"../core/Layout\"\nimport axios from \"axios\"\nimport { API } from \"../../config\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Jwt } from \"../../store/models/auth\"\nimport { Link } from \"react-router-dom\"\n\nconst AddCategory = () => {\n  const [name, setName] = useState<string>(\"\")\n\n  const { user, token } = isAuth() as Jwt\n\n  useEffect(() => {\n    async function addCategory() {\n      try {\n        let response = await axios.post<{ name: string }>(\n          `${API}/category/create/${user._id}`,\n          {\n            name: name\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }\n        )\n        message.success(`[${response.data.name}] 分类添加成功`)\n      } catch (error) {\n        message.error(error.response.data.error)\n      }\n    }\n    if (name) {\n      addCategory()\n    }\n  }, [name])\n\n  const onFinish = (value: { name: string }) => {\n    console.log(value)\n    setName(value.name)\n  }\n  return (\n    <Layout title=\"添加分类\" subTitle=\"\">\n      <Form onFinish={onFinish}>\n        <Form.Item name=\"name\" label=\"分类名称\">\n          <Input />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            添加分类\n          </Button>\n        </Form.Item>\n      </Form>\n      <Button>\n        <Link to=\"/admin/dashboard\">返回 Dashboard</Link>\n      </Button>\n    </Layout>\n  )\n}\n\nexport default AddCategory\n","import { Button, Form, Input, message, Select, Upload } from \"antd\"\nimport { UploadOutlined } from \"@ant-design/icons\"\nimport React, { useEffect, useState } from \"react\"\nimport Layout from \"../core/Layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getCategory } from \"../../store/actions/category.actions\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { CategoryState } from \"../../store/reducers/category.reducer\"\nimport { RcFile } from \"antd/lib/upload\"\nimport axios from \"axios\"\nimport { API } from \"../../config\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Jwt } from \"../../store/models/auth\"\n\nconst AddProduct = () => {\n  const dispatch = useDispatch()\n  const [file, setFile] = useState<RcFile>()\n\n  const category = useSelector<AppState, CategoryState>(\n    state => state.category\n  )\n\n  useEffect(() => {\n    dispatch(getCategory())\n  }, [])\n\n  const { user, token } = isAuth() as Jwt\n\n  const onFinish = (product: any) => {\n    const formData = new FormData()\n    for (let attr in product) {\n      formData.set(attr, product[attr])\n    }\n    if (typeof file !== \"undefined\") {\n      formData.set(\"photo\", file)\n    }\n\n    axios\n      .post(`${API}/product/create/${user._id}`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n      .then(\n        () => {\n          message.success(\"商品添加成功\")\n        },\n        () => {\n          message.error(\"商品添加失败\")\n        }\n      )\n  }\n\n  const addProductForm = () => {\n    const props = {\n      accept: \"image/*\", // 限制上传类型\n      beforeUpload: function (file: RcFile) {\n        console.log('file :>> ', file);\n        setFile(file)\n        return false\n      }\n    }\n    return (\n      <Form onFinish={onFinish} initialValues={{ category: \"\" }}>\n        <Form.Item>\n          <Upload {...props}>\n            <Button icon={<UploadOutlined />}>上传商品封面</Button>\n          </Upload>\n        </Form.Item>\n        <Form.Item name=\"name\" label=\"商品名称\">\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"description\" label=\"商品描述\">\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"price\" label=\"商品价格\">\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"category\" label=\"所属分类\">\n          <Select>\n            <Select.Option value=\"\">请选择分类</Select.Option>\n            {category.category.result.map(item => (\n              <Select.Option key={item._id} value={item._id}>\n                {item.name}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item name=\"quantity\" label=\"商品数量\">\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"shipping\" label=\"是否需要运输\">\n          <Select>\n            <Select.Option value=\"1\">是</Select.Option>\n            <Select.Option value=\"0\">否</Select.Option>\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            添加商品\n          </Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n\n  return (\n    <Layout title=\"添加商品\" subTitle=\"\">\n      {addProductForm()}\n    </Layout>\n  )\n}\n\nexport default AddProduct\n","import { Col, Row } from \"antd\"\nimport React, { useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport Layout from \"./Layout\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getProductById } from \"../../store/actions/product.actions\"\nimport { AppState } from \"../../store/reducers/index\"\nimport { ProductState } from \"../../store/reducers/product.reducer\"\nimport ProductItem from \"./ProductItem\"\n\nconst Product = () => {\n  const dispatch = useDispatch()\n  const { product } = useSelector<AppState, ProductState>(\n    state => state.product\n  )\n  const { productId } = useParams<{ productId: string }>()\n  useEffect(() => {\n    dispatch(getProductById({ productId }))\n  }, [])\n  return (\n    <Layout title=\"商品名称\" subTitle=\"商品描述\">\n      <Row gutter={36}>\n        <Col span=\"18\">\n          <ProductItem showViewProduct={false} product={product.result} />\n        </Col>\n        <Col span=\"6\">right</Col>\n      </Row>\n    </Layout>\n  )\n}\n\nexport default Product\n","import React, { ChangeEvent, FC, useState } from \"react\"\nimport { CartItem, updateItem, deleteItem } from \"../../helpers/cart\"\nimport { Button, Image, Input } from \"antd\"\nimport { API } from \"../../config\"\n\ninterface Props {\n  product: CartItem\n  setCart: (arg: CartItem[]) => void\n}\n\nconst CartItemFc: FC<Props> = ({ product, setCart }) => {\n  const [count, setCount] = useState<number>(product.count)\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    let count = parseInt(event.target.value)\n    setCart(updateItem(product._id, count))\n    setCount(count)\n  }\n  return (\n    <tr className=\"ant-table-row\">\n      <td className=\"ant-table-cell\">\n        <Image width={120} src={`${API}/product/photo/${product._id}`} />\n      </td>\n      <td className=\"ant-table-cell\">{product.name}</td>\n      <td className=\"ant-table-cell\">{product.price}</td>\n      <td className=\"ant-table-cell\">{product.category.name}</td>\n      <td className=\"ant-table-cell\">\n        <Input type=\"number\" value={count} onChange={handleChange} />\n      </td>\n      <td className=\"ant-table-cell\">\n        <Button\n          onClick={() => setCart(deleteItem(product._id))}\n          danger\n          type=\"primary\"\n        >\n          删除\n        </Button>\n      </td>\n    </tr>\n  )\n}\n\nexport default CartItemFc\n","import React, { FC, useEffect } from \"react\"\nimport { CartItem } from \"../../helpers/cart\"\nimport { Typography } from \"antd\"\n\nconst { Title } = Typography\n\ninterface Props {\n  cart: CartItem[]\n  setTotalPrice: (price: number) => void\n}\n\nconst TotalPrice: FC<Props> = ({ cart, setTotalPrice }) => {\n  const getTotalPrice = () => {\n    console.log(cart)\n    return cart\n      .reduce((currentValue, nextValue) => {\n        return (currentValue += nextValue.price * nextValue.count)\n      }, 0)\n      .toFixed(2)\n  }\n\n  useEffect(() => {\n    setTotalPrice(parseFloat(getTotalPrice()))\n  }, [cart])\n\n  return <Title level={5}>商品总价: {getTotalPrice()}</Title>\n}\n\nexport default TotalPrice\n","import { Button } from \"antd\"\nimport React, { FC } from \"react\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Link } from \"react-router-dom\"\nimport { CartItem } from \"../../helpers/cart\"\nimport axios from \"axios\"\nimport { API } from \"../../config\"\nimport { Jwt } from \"../../store/models/auth\"\n\ninterface Props {\n  totalPrice: number\n  address: string\n  cart: CartItem[]\n}\n\nconst Pay: FC<Props> = ({ totalPrice, address, cart }) => {\n  const getPayUrl = () => {\n    axios\n      .post(`${API}/alipay`, {\n        totalAmount: totalPrice,\n        subject: \"测试订单标题\",\n        body: \"测试订单描述\",\n        products: cart.map(product => ({\n          count: product.count,\n          product: product._id\n        })),\n        address: address,\n        userId: (isAuth() as Jwt).user._id\n      })\n      .then(response => {\n        window.location.href = response.data.result\n      })\n  }\n\n  const showButton = () => {\n    return isAuth() ? (\n      <Button onClick={getPayUrl}>提交订单</Button>\n    ) : (\n      <Button>\n        <Link to=\"/signin\">登录</Link>\n      </Button>\n    )\n  }\n\n  return <>{showButton()}</>\n}\n\nexport default Pay\n","import React, { useState, useEffect, ChangeEvent } from \"react\"\nimport Layout from \"./Layout\"\nimport { CartItem, getCart } from \"../../helpers/cart\"\nimport { Col, Divider, Input, Row } from \"antd\"\nimport CartItemFc from \"./CartItemFc\"\nimport TotalPrice from \"./TotalPrice\"\nimport Pay from \"./Pay\"\n\nconst Cart = () => {\n  const [cart, setCart] = useState<CartItem[]>([])\n  const [address, setAddress] = useState<string>(\"\")\n  const [totalPrice, setTotalPrice] = useState<number>(() => {\n    return 0\n  })\n\n  useEffect(() => {\n    setCart(getCart())\n  }, [])\n\n  const showCart = () => (\n    <table style={{ width: \"100%\" }}>\n      <thead className=\"ant-table-thead\">\n        <tr>\n          <th className=\"ant-table-cell\">商品封面</th>\n          <th className=\"ant-table-cell\">商品名称</th>\n          <th className=\"ant-table-cell\">商品价格</th>\n          <th className=\"ant-table-cell\">商品分类</th>\n          <th className=\"ant-table-cell\">商品数量</th>\n          <th className=\"ant-table-cell\">操作</th>\n        </tr>\n      </thead>\n      <tbody className=\"ant-table-tbody\">\n        {cart.map(item => (\n          <CartItemFc key={item._id} setCart={setCart} product={item} />\n        ))}\n      </tbody>\n    </table>\n  )\n\n  return (\n    <Layout title=\"购物车\" subTitle=\"付款吧, 我就是你的了\">\n      <Row gutter={16}>\n        <Col span=\"16\">{showCart()}</Col>\n        <Col span=\"8\">\n          <Row>\n            <Input\n              value={address}\n              onChange={(event: ChangeEvent<HTMLInputElement>) =>\n                setAddress(event.target.value)\n              }\n              placeholder=\"请输入收货地址\"\n            />\n          </Row>\n          <Divider />\n          <Row>\n            <TotalPrice cart={cart} setTotalPrice={setTotalPrice} />\n          </Row>\n          <Row>\n            <Pay totalPrice={totalPrice} cart={cart} address={address} />\n          </Row>\n        </Col>\n      </Row>\n    </Layout>\n  )\n}\n\nexport default Cart\n","import { Button } from \"antd\"\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Layout from \"./Layout\"\n\nconst Success = () => {\n  return (\n    <Layout title=\"支付完成\" subTitle=\"\">\n      <Button>\n        <Link to=\"/\">继续购物</Link>\n      </Button>\n    </Layout>\n  )\n}\n\nexport default Success\n","import React, { ChangeEvent, useEffect, useState } from \"react\"\nimport { Divider, Select, Typography } from \"antd\"\nimport Layout from \"../core/Layout\"\nimport axios from \"axios\"\nimport { API } from \"../../config\"\nimport { isAuth } from \"../../helpers/auth\"\nimport { Jwt } from \"../../store/models/auth\"\nimport { Order } from \"../../store/models/order\"\nimport moment from \"moment\"\n\nconst { Title } = Typography\n\nconst Orders = () => {\n  const { token, user } = isAuth() as Jwt\n  const [orders, setOrders] = useState([])\n\n  async function getOrders() {\n    let response = await axios.get(`${API}/order/list/${user._id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    })\n    setOrders(response.data)\n  }\n\n  useEffect(() => {\n    getOrders()\n  }, [])\n\n  const getOrderCount = () => {\n    if (orders.length > 0) {\n      return `当前订单的数量是 ${orders.length}`\n    } else {\n      return `还没有订单`\n    }\n  }\n\n  const showStatus = (status: string) => {\n    switch (status) {\n      case \"Unpaid\":\n        return \"未付款\"\n      case \"Paid\":\n        return \"已付款\"\n      case \"Shipped\":\n        return \"运输中\"\n      case \"Completed\":\n        return \"已完成\"\n      case \"Cancelled\":\n        return \"已取消\"\n    }\n  }\n\n  const handleChange = (orderId: string) => (status: string) => {\n    axios\n      .put(\n        `${API}/order/status/${user._id}`,\n        {\n          orderId,\n          status\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }\n      )\n      .then(() => {\n        getOrders()\n      })\n  }\n\n  return (\n    <Layout title=\"订单\" subTitle={getOrderCount()}>\n      {orders.map((order: Order) => (\n        <div key={order._id}>\n          <Title level={4}>订单ID: ${order._id}</Title>\n          <table style={{ width: \"100%\" }}>\n            <thead className=\"ant-table-thead\">\n              <tr>\n                <th className=\"ant-table-cell\">订单状态</th>\n                <th className=\"ant-table-cell\">订单号</th>\n                <th className=\"ant-table-cell\">总价</th>\n                <th className=\"ant-table-cell\">创建时间</th>\n                <th className=\"ant-table-cell\">邮寄地址</th>\n                <th className=\"ant-table-cell\">客户姓名</th>\n              </tr>\n            </thead>\n            <tbody className=\"ant-table-tbody\">\n              <tr className=\"ant-table-row\">\n                <td className=\"ant-table-cell\">\n                  {showStatus(order.status)}{\" \"}\n                  <Select\n                    onChange={handleChange(order._id)}\n                    defaultValue={order.status}\n                  >\n                    <Select.Option value=\"Unpaid\">未付款</Select.Option>\n                    <Select.Option value=\"Paid\">已付款</Select.Option>\n                    <Select.Option value=\"Shipped\">运输中</Select.Option>\n                    <Select.Option value=\"Completed\">已完成</Select.Option>\n                    <Select.Option value=\"Cancelled\">已取消</Select.Option>\n                  </Select>\n                </td>\n                <td className=\"ant-table-cell\">{order.trade_no}</td>\n                <td className=\"ant-table-cell\">{order.amount}</td>\n                <td className=\"ant-table-cell\">\n                  {moment(order.createdAt).format(\"YYYY-MM-DD\")}\n                </td>\n                <td className=\"ant-table-cell\">{order.address}</td>\n                <td className=\"ant-table-cell\">{order.user.name}</td>\n              </tr>\n            </tbody>\n          </table>\n          <table style={{ width: \"100%\" }}>\n            <thead className=\"ant-table-thead\">\n              <tr>\n                <th className=\"ant-table-cell\">商品名称</th>\n                <th className=\"ant-table-cell\">商品价格</th>\n                <th className=\"ant-table-cell\">商品数量</th>\n                <th className=\"ant-table-cell\">商品ID</th>\n              </tr>\n            </thead>\n            <tbody className=\"ant-table-tbody\">\n              {order.products.map(item => (\n                <tr key={item._id} className=\"ant-table-row\">\n                  <td className=\"ant-table-cell\">{item.product.name}</td>\n                  <td className=\"ant-table-cell\">{item.product.price}</td>\n                  <td className=\"ant-table-cell\">{item.count}</td>\n                  <td className=\"ant-table-cell\">{item.product._id}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <Divider />\n        </div>\n      ))}\n    </Layout>\n  )\n}\n\nexport default Orders\n","import React from \"react\"\nimport { HashRouter, Route, Switch } from \"react-router-dom\"\nimport Home from \"./components/core/Home\"\nimport Shop from \"./components/core/Shop\"\nimport Signin from \"./components/core/Signin\"\nimport Signup from \"./components/core/Signup\"\nimport Dashboard from \"./components/admin/Dashboard\"\nimport PrivateRoute from \"./components/admin/PrivateRoute\"\nimport AdminDashboard from \"./components/admin/AdminDashboard\"\nimport AdminRoute from \"./components/admin/AdminRoute\"\nimport AddCategory from \"./components/admin/AddCategory\"\nimport AddProduct from \"./components/admin/AddProduct\"\nimport Product from \"./components/core/Product\"\nimport Cart from \"./components/core/Cart\"\nimport Success from \"./components/core/Success\"\nimport Orders from \"./components/admin/Orders\"\n\nconst Routes = () => {\n  \n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/shop\" component={Shop} />\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/cart\" component={Cart} />\n        {/* 支付成功后页面 */}\n        <Route path=\"/paysuccess\" component={Success} />\n        <PrivateRoute path=\"/user/dashboard\" component={Dashboard} />\n        <AdminRoute path=\"/admin/dashboard\" component={AdminDashboard} />\n        <AdminRoute path=\"/create/category\" component={AddCategory} />\n        <AdminRoute path=\"/create/product\" component={AddProduct} />\n        <AdminRoute path=\"/admin/orders\" component={Orders} />\n        <Route path=\"/product/:productId\" component={Product} />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default Routes\n","import {\n  RESET_SIGNUP,\n  SIGNIN,\n  SIGNIN_SUCCESS,\n  SIGNIN_FAIL\n} from \"../actions/auth.actions\"\n\nimport {\n  AuthUnionType,\n  SIGNUP,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL\n} from \"../actions/auth.actions\"\n\nexport interface AuthState {\n  signup: {\n    loaded: boolean\n    success: boolean\n    message: string\n  }\n  signin: {\n    loaded: boolean\n    success: boolean\n    message: string\n  }\n}\n\nconst intialState: AuthState = {\n  signup: {\n    loaded: false,\n    success: false,\n    message: \"\"\n  },\n  signin: {\n    loaded: false,\n    success: false,\n    message: \"\"\n  }\n}\n\nexport default function authReducer(\n  state = intialState,\n  action: AuthUnionType\n) {\n  switch (action.type) {\n    case SIGNUP:\n      return {\n        ...state,\n        signup: {\n          loaded: false,\n          success: false\n        }\n      }\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        signup: {\n          loaded: true,\n          success: true\n        }\n      }\n    case SIGNUP_FAIL:\n      return {\n        ...state,\n        signup: {\n          loaded: true,\n          success: false,\n          message: action.message\n        }\n      }\n    case RESET_SIGNUP:\n      return {\n        ...state,\n        signup: {\n          loaded: false,\n          success: false,\n          message: \"\"\n        }\n      }\n    case SIGNIN:\n      return {\n        ...state,\n        signin: {\n          loaded: false,\n          success: false,\n          message: \"\"\n        }\n      }\n    case SIGNIN_SUCCESS:\n      return {\n        ...state,\n        signin: {\n          loaded: true,\n          success: true,\n          message: \"\"\n        }\n      }\n    case SIGNIN_FAIL:\n      return {\n        ...state,\n        signin: {\n          loaded: true,\n          success: false,\n          message: action.message\n        }\n      }\n    default:\n      return state\n  }\n}\n","import {\n  CategoryUnionType,\n  GET_CATEGORY,\n  GET_CATEGORY_SUCCESS\n} from \"../actions/category.actions\"\nimport { Category } from \"../models/category\"\n\nexport interface CategoryState {\n  category: {\n    loaded: boolean\n    success: boolean\n    result: Category[]\n  }\n}\n\nconst initialState: CategoryState = {\n  category: {\n    loaded: false,\n    success: false,\n    result: []\n  }\n}\n\nexport default function categoryReducer(\n  state = initialState,\n  action: CategoryUnionType\n) {\n  switch (action.type) {\n    case GET_CATEGORY:\n      return {\n        ...state,\n        category: {\n          loaded: false,\n          success: false,\n          result: []\n        }\n      }\n    case GET_CATEGORY_SUCCESS:\n      return {\n        ...state,\n        category: {\n          loaded: true,\n          success: true,\n          result: action.payload\n        }\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ProductUnionType,\n  GET_PRODUCT,\n  GET_PRODUCT_SUCCESS\n} from \"../actions/product.actions\"\nimport { Product } from \"../models/product\"\nimport { GET_PRODUCT_BY_ID_SUCCESS } from \"../actions/product.actions\"\nimport {\n  FILTER_PRODUCT_SUCCESS,\n  GET_PRODUCT_BY_ID\n} from \"../actions/product.actions\"\nimport {\n  SEARCH_PRODUCT_SUCCESS,\n  FILTER_PRODUCT\n} from \"../actions/product.actions\"\n\nexport interface ProductState {\n  createdAt: {\n    loaded: boolean\n    success: boolean\n    products: Product[]\n  }\n  sold: {\n    loaded: boolean\n    success: boolean\n    products: Product[]\n  }\n  search: Product[]\n  filter: {\n    loaded: boolean\n    success: boolean\n    result: {\n      size: number\n      data: Product[]\n    }\n  }\n  product: {\n    loaded: boolean\n    success: boolean\n    result: Product\n  }\n}\n\nconst initialState: ProductState = {\n  createdAt: {\n    loaded: false,\n    success: false,\n    products: []\n  },\n  sold: {\n    loaded: false,\n    success: false,\n    products: []\n  },\n  search: [],\n  filter: {\n    success: false,\n    loaded: false,\n    result: {\n      size: 0,\n      data: []\n    }\n  },\n  product: {\n    loaded: false,\n    success: false,\n    result: {\n      _id: \"\",\n      name: \"\",\n      price: 0,\n      description: \"\",\n      category: {\n        _id: \"\",\n        name: \"\"\n      },\n      quantity: 0,\n      sold: 0,\n      photo: new FormData(),\n      shipping: false,\n      createdAt: \"\"\n    }\n  }\n}\n\nexport default function productReducer(\n  state = initialState,\n  action: ProductUnionType\n) {\n  switch (action.type) {\n    case GET_PRODUCT:\n      return {\n        ...state,\n        [action.sortBy]: {\n          ...state[action.sortBy === \"createdAt\" ? \"createdAt\" : \"sold\"],\n          loaded: false,\n          success: false\n        }\n      }\n    case GET_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        [action.sortBy]: {\n          loaded: true,\n          success: true,\n          products: action.payload\n        }\n      }\n    case SEARCH_PRODUCT_SUCCESS:\n      return {\n        ...state,\n        search: action.products\n      }\n    case FILTER_PRODUCT:\n      return {\n        ...state,\n        filter: {\n          loaded: false,\n          success: false,\n          result: {\n            size: 0,\n            data: state.filter.result.data\n          }\n        }\n      }\n    case FILTER_PRODUCT_SUCCESS:\n      let data =\n        action.skip === 0\n          ? action.payload.data\n          : [...state.filter.result.data, ...action.payload.data]\n\n      return {\n        ...state,\n        filter: {\n          loaded: true,\n          success: true,\n          result: {\n            size: action.payload.size,\n            data\n          }\n        }\n      }\n    case GET_PRODUCT_BY_ID:\n      return {\n        ...state,\n        product: {\n          ...state.product,\n          loaded: false,\n          success: false\n        }\n      }\n    case GET_PRODUCT_BY_ID_SUCCESS: {\n      return {\n        ...state,\n        product: {\n          loaded: true,\n          success: true,\n          result: action.payload\n        }\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { connectRouter, RouterState } from \"connected-react-router\"\nimport { combineReducers } from \"redux\"\nimport { History } from \"history\"\nimport authReducer from \"./auth.reducer\"\nimport { AuthState } from \"./auth.reducer\"\nimport categoryReducer from \"./category.reducer\"\nimport { CategoryState } from \"./category.reducer\"\nimport productReducer from \"./product.reducer\"\nimport { ProductState } from \"./product.reducer\"\n\nexport interface AppState {\n  router: RouterState\n  auth: AuthState\n  category: CategoryState\n  product: ProductState\n}\n\nconst createRootReducer = (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    auth: authReducer,\n    category: categoryReducer,\n    product: productReducer\n  })\n\nexport default createRootReducer\n","import { put, takeEvery } from \"redux-saga/effects\"\nimport {\n  SIGNUP,\n  SignupAction,\n  signupSuccess,\n  signupFail\n} from \"../actions/auth.actions\"\nimport axios from \"axios\"\nimport { API } from \"../../config\"\nimport {\n  SIGNIN,\n  SigninAction,\n  signinSuccess,\n  signinFail\n} from \"../actions/auth.actions\"\n\nfunction* hanleSignup(action: SignupAction) {\n  try {\n    yield axios.post(`${API}/signup`, action.payload)\n    yield put(signupSuccess())\n  } catch (error) {\n    yield put(signupFail(error.response.data.error))\n  }\n}\n\nfunction* handleSignin(action: SigninAction) {\n  try {\n    let response = yield axios.post(`${API}/signin`, action.payload)\n    localStorage.setItem(\"jwt\", JSON.stringify(response.data))\n    yield put(signinSuccess())\n  } catch (error) {\n    yield put(signinFail(error.response.data.error))\n  }\n}\n\nexport default function* authSaga() {\n  // 注册\n  yield takeEvery(SIGNUP, hanleSignup)\n  // 登录\n  yield takeEvery(SIGNIN, handleSignin)\n}\n","import { takeEvery, put } from \"redux-saga/effects\"\nimport { GET_CATEGORY, getCategorySuccess } from \"../actions/category.actions\"\nimport axios from \"axios\"\nimport { API } from \"../../config\"\nimport { Category } from \"../models/category\"\n\nfunction* handleGetCategory() {\n  let response = yield axios.get<Category[]>(`${API}/categories`)\n  yield put(getCategorySuccess(response.data))\n}\n\nexport default function* categorySaga() {\n  // 获取分类列表\n  yield takeEvery(GET_CATEGORY, handleGetCategory)\n}\n","import { put, take, takeEvery } from \"redux-saga/effects\"\nimport {\n  GET_PRODUCT,\n  GetProductAction,\n  getProductSuccess\n} from \"../actions/product.actions\"\nimport axios from \"axios\"\nimport { API } from \"../../config\"\nimport { Product } from \"../models/product\"\nimport { getProductByIdSuccess } from \"../actions/product.actions\"\nimport {\n  GET_PRODUCT_BY_ID,\n  GetProductByIdAction\n} from \"../actions/product.actions\"\nimport {\n  FilterProductAction,\n  filterProductSuccess\n} from \"../actions/product.actions\"\nimport {\n  SearchProductSuccess,\n  FILTER_PRODUCT\n} from \"../actions/product.actions\"\nimport {\n  SEARCH_PRODUCT,\n  SearchProductAction\n} from \"../actions/product.actions\"\n\n// /products?sortBy=createdAt&order=asc&limit=10\nfunction* handleGetProduct({ sortBy, order, limit }: GetProductAction) {\n  \n  let response = yield axios.get<Product[]>(`${API}/products`, {\n    params: { sortBy, order, limit }\n  })\n  yield put(getProductSuccess(response.data, sortBy))\n}\n\nfunction* handleSearchProduct({\n  payload: { search, category }\n}: SearchProductAction) {\n  let response = yield axios.get(`${API}/products/search`, {\n    params: { search, category }\n  })\n  yield put(SearchProductSuccess(response.data))\n}\n\nfunction* handleFilterProduct(action: FilterProductAction) {\n  let response = yield axios.post(`${API}/products/filter`, action.payload)\n  yield put(filterProductSuccess(response.data, action.payload.skip))\n}\n\nfunction* handleGetProductById({ payload }: GetProductByIdAction) {\n  let response = yield axios.get(`${API}/product/${payload.productId}`)\n  yield put(getProductByIdSuccess(response.data))\n}\n\nexport default function* productSaga() {\n  yield takeEvery(GET_PRODUCT, handleGetProduct)\n  yield takeEvery(SEARCH_PRODUCT, handleSearchProduct)\n  yield takeEvery(FILTER_PRODUCT, handleFilterProduct)\n  yield takeEvery(GET_PRODUCT_BY_ID, handleGetProductById)\n}\n","import { all } from \"redux-saga/effects\"\nimport authSaga from \"./auth.saga\"\nimport categorySaga from \"./category.saga\"\nimport productSaga from \"./product.saga\"\n\nexport default function* rootSaga() {\n  yield all([authSaga(), categorySaga(), productSaga()])\n}\n","import { applyMiddleware, createStore } from \"redux\"\nimport createRootReducer from \"./reducers/index\"\nimport { createHashHistory } from \"history\"\nimport { routerMiddleware } from \"connected-react-router\"\nimport createSagaMiddleware from \"redux-saga\"\nimport rootSaga from \"./sagas/index\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\n\nexport const history = createHashHistory()\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  createRootReducer(history),\n  // composeWithDevTools 可以配合调试工具Redux查看内容\n  composeWithDevTools(\n    applyMiddleware(routerMiddleware(history), sagaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import { ConnectedRouter } from \"connected-react-router\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport Routes from \"./Routes\"\nimport store from \"./store/index\"\nimport { history } from \"./store\"\nimport \"./style.css\"\nimport AnotherStore from \"./anotherStore\"\nimport {API} from './config';\nconsole.log(API);\nconsole.log(process.env.NODE_ENV);\n\nReactDOM.render(\n  <Provider store={store}>\n    {/*  将路由状态同步到store中 */}\n    <ConnectedRouter history={history}>\n      <AnotherStore>\n        <Routes />\n      </AnotherStore>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}